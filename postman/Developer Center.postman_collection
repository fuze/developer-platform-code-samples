{
	"info": {
		"_postman_id": "708f248d-3826-4227-bc95-0b0e694a694e",
		"name": "Developer Center (2021-01-18)",
		"description": "developer-api\n\nContact Support:\n Name: Fuze\n Email: support@fuze.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "call-recordings",
			"item": [
				{
					"name": "Get a call recordingID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/call-recordings/:recording-id",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"call-recordings",
								":recording-id"
							],
							"variable": [
								{
									"key": "recording-id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Call recording identifier."
								}
							]
						},
						"description": "Retrieves a single call recording data by recordingID."
					},
					"response": [
						{
							"name": "Not found, status code 13004",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"direction\": \"out\",\n  \"duration\": 85509413,\n  \"endedAt\": \"2020-06-29T16:47:30+01:00\",\n  \"from\": \"+17008573521\",\n  \"linkedId\": \"cam-z6-call5-1495559375.646708\",\n  \"organization\": \"fuze\",\n  \"pbx\": \"fuze\",\n  \"recordingId\": 60853722,\n  \"retainedUntil\": \"2020-07-29T16:47:30+01:00\",\n  \"startedAt\": \"2020-06-29T16:46:46+01:00\",\n  \"to\": \"+17008573520\",\n  \"userId\": -46793010,\n  \"departmentId\": -58443257,\n  \"locationId\": -51804423,\n  \"extension\": \"3520\",\n  \"queueName\": \"fuze-co7\"\n },\n \"status\": 54853080,\n \"msg\": \"aute sunt Lorem laborum\"\n}"
						}
					]
				},
				{
					"name": "Get all call recordings",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/call-recordings",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"call-recordings"
							],
							"query": [
								{
									"key": "linkedId",
									"value": "<string>",
									"description": "Get all call recordings associated with a linkedId",
									"disabled": true
								},
								{
									"key": "before",
									"value": "<string>",
									"description": "Get call recordings that ended before this timestamp. Must be in RFC3339 format.",
									"disabled": true
								},
								{
									"key": "after",
									"value": "<string>",
									"description": "Get call recordings that ended on or after this timestamp. Must be in RFC3339 format.",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<string>",
									"description": "Only return call recordings made by users in this department",
									"disabled": true
								},
								{
									"key": "userId",
									"value": "<string>",
									"description": "Only return call recordings for this userId",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for item pagination. See 'cursor' field from previous response.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of items per page.",
									"disabled": true
								}
							]
						},
						"description": "Get all call recording details for your organization. This endpoint returns recordingIDs that can be used in the /media endpoint to download call recording sound files."
					},
					"response": [
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/call-recordings?linkedId=<string>&before=<string>&after=<string>&departmentId=<string>&userId=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings"
									],
									"query": [
										{
											"key": "linkedId",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "departmentId",
											"value": "<string>"
										},
										{
											"key": "userId",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/call-recordings?linkedId=<string>&before=<string>&after=<string>&departmentId=<string>&userId=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings"
									],
									"query": [
										{
											"key": "linkedId",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "departmentId",
											"value": "<string>"
										},
										{
											"key": "userId",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/call-recordings?linkedId=<string>&before=<string>&after=<string>&departmentId=<string>&userId=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings"
									],
									"query": [
										{
											"key": "linkedId",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "departmentId",
											"value": "<string>"
										},
										{
											"key": "userId",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"direction\": \"out\",\n   \"duration\": -24126857,\n   \"endedAt\": \"2020-06-29T16:47:30+01:00\",\n   \"from\": \"+17008573521\",\n   \"linkedId\": \"cam-z6-call5-1495559375.646708\",\n   \"organization\": \"fuze\",\n   \"pbx\": \"fuze\",\n   \"recordingId\": 87691609,\n   \"retainedUntil\": \"2020-07-29T16:47:30+01:00\",\n   \"startedAt\": \"2020-06-29T16:46:46+01:00\",\n   \"to\": \"+17008573520\",\n   \"userId\": 47972848,\n   \"departmentId\": 75914477,\n   \"locationId\": 4122277,\n   \"extension\": \"3520\",\n   \"queueName\": \"fuze-co7\"\n  },\n  {\n   \"direction\": \"out\",\n   \"duration\": 76223468,\n   \"endedAt\": \"2020-06-29T16:47:30+01:00\",\n   \"from\": \"+17008573521\",\n   \"linkedId\": \"cam-z6-call5-1495559375.646708\",\n   \"organization\": \"fuze\",\n   \"pbx\": \"fuze\",\n   \"recordingId\": 26514811,\n   \"retainedUntil\": \"2020-07-29T16:47:30+01:00\",\n   \"startedAt\": \"2020-06-29T16:46:46+01:00\",\n   \"to\": \"+17008573520\",\n   \"userId\": -43574364,\n   \"departmentId\": -67390609,\n   \"locationId\": 68075828,\n   \"extension\": \"3520\",\n   \"queueName\": \"fuze-co7\"\n  }\n ],\n \"pagination\": {\n  \"cursor\": \"dolore Lorem\",\n  \"limit\": 11328229\n },\n \"status\": 59131510,\n \"msg\": \"officia dolore\"\n}"
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/call-recordings?linkedId=<string>&before=<string>&after=<string>&departmentId=<string>&userId=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings"
									],
									"query": [
										{
											"key": "linkedId",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "departmentId",
											"value": "<string>"
										},
										{
											"key": "userId",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/call-recordings?linkedId=<string>&before=<string>&after=<string>&departmentId=<string>&userId=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings"
									],
									"query": [
										{
											"key": "linkedId",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "departmentId",
											"value": "<string>"
										},
										{
											"key": "userId",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/call-recordings?linkedId=<string>&before=<string>&after=<string>&departmentId=<string>&userId=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings"
									],
									"query": [
										{
											"key": "linkedId",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "departmentId",
											"value": "<string>"
										},
										{
											"key": "userId",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a call recording sound file by recordingID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/call-recordings/:recording-id/media",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"call-recordings",
								":recording-id",
								"media"
							],
							"variable": [
								{
									"key": "recording-id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Call recording identifier."
								}
							]
						},
						"description": "This downloads the call recording sound file for the passed in recordingID. It is important to note that this will return a temporary redirect which the caller must follow to download the sound file."
					},
					"response": [
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id/media",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id",
										"media"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Temporary redirect.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id/media",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id",
										"media"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Temporary Redirect (since HTTP/1.1)",
							"code": 307,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id/media",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id",
										"media"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id/media",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id",
										"media"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id/media",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id",
										"media"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found, status code 13004",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id/media",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id",
										"media"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id/media",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id",
										"media"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "calls",
			"item": [
				{
					"name": "Get all calls",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/calls",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"calls"
							],
							"query": [
								{
									"key": "after",
									"value": "<string>",
									"description": "Only calls completed after this date",
									"disabled": true
								},
								{
									"key": "before",
									"value": "<string>",
									"description": "Only calls completed before this date. Must be after \"after\" date",
									"disabled": true
								},
								{
									"key": "departmentName",
									"value": "<string>",
									"description": "Calls from specific departments. Can be a comma-separated list (no spaces)",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<string>",
									"description": "Calls from one specific department by its numeric ID",
									"disabled": true
								},
								{
									"key": "username",
									"value": "<string>",
									"description": "Calls from a specific user, by username. Don't set username and userId at the same time",
									"disabled": true
								},
								{
									"key": "userId",
									"value": "<string>",
									"description": "Calls from a specific user, by numeric ID. Don't set userId and username at the same time",
									"disabled": true
								},
								{
									"key": "direction",
									"value": "<string>",
									"description": "Call direction. Distinguishes between calls within the company (internal), calls from a company number to an outside number (outbound), calls from an outside number to a company number (inbound), and platform interactions like checking voicemail (platform). Can be a comma-separated list (no spaces)",
									"disabled": true
								},
								{
									"key": "organization",
									"value": "<string>",
									"description": "Name of the organization that the calls are a part of",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for item pagination. See 'cursor' field from previous response.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of items per page.",
									"disabled": true
								}
							]
						},
						"description": "Get all call details for calls within your organization."
					},
					"response": [
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calls?after=<string>&before=<string>&departmentName=<string>&departmentId=<string>&username=<string>&userId=<string>&direction=<string>&organization=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "departmentName",
											"value": "<string>"
										},
										{
											"key": "departmentId",
											"value": "<string>"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "userId",
											"value": "<string>"
										},
										{
											"key": "direction",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calls?after=<string>&before=<string>&departmentName=<string>&departmentId=<string>&username=<string>&userId=<string>&direction=<string>&organization=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "departmentName",
											"value": "<string>"
										},
										{
											"key": "departmentId",
											"value": "<string>"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "userId",
											"value": "<string>"
										},
										{
											"key": "direction",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calls?after=<string>&before=<string>&departmentName=<string>&departmentId=<string>&username=<string>&userId=<string>&direction=<string>&organization=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "departmentName",
											"value": "<string>"
										},
										{
											"key": "departmentId",
											"value": "<string>"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "userId",
											"value": "<string>"
										},
										{
											"key": "direction",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calls?after=<string>&before=<string>&departmentName=<string>&departmentId=<string>&username=<string>&userId=<string>&direction=<string>&organization=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "departmentName",
											"value": "<string>"
										},
										{
											"key": "departmentId",
											"value": "<string>"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "userId",
											"value": "<string>"
										},
										{
											"key": "direction",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calls?after=<string>&before=<string>&departmentName=<string>&departmentId=<string>&username=<string>&userId=<string>&direction=<string>&organization=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "departmentName",
											"value": "<string>"
										},
										{
											"key": "departmentId",
											"value": "<string>"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "userId",
											"value": "<string>"
										},
										{
											"key": "direction",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"direction\": \"Inbound\",\n   \"disposition\": \"Voicemail\",\n   \"duration\": 4400818,\n   \"endedAt\": \"2020-07-30T23:25:24Z\",\n   \"from\": {\n    \"connectedAt\": \"2020-07-30T23:23:54Z\",\n    \"disconnectedAt\": \"2020-07-30T23:25:24Z\",\n    \"number\": \"6172456167\",\n    \"numberE164\": \"+16172456167\",\n    \"name\": \"John Smith\",\n    \"username\": \"jsmith@yourorganization.com\",\n    \"serviceId\": 99289654,\n    \"departmentName\": \"Headquarters\",\n    \"deviceType\": \"Polycom\"\n   },\n   \"legs\": [\n    {\n     \"legType\": \"Hangup\",\n     \"timestamp\": \"2020-07-30T23:25:24Z\",\n     \"number\": \"+17078652255\",\n     \"username\": \"aliqua exercitation fugiat tempor ipsum\",\n     \"serviceId\": -61303968,\n     \"departmentName\": \"Headquarters\",\n     \"deviceType\": \"Polycom\",\n     \"menuName\": \"occaecat si\",\n     \"menuPrompt\": \"est eu\",\n     \"menuOption\": \"non Ut exercitation\",\n     \"optionAction\": \"amet incididunt eiusmod\",\n     \"optionArg\": \"elit deserunt\",\n     \"queueName\": \"veniam Ut nisi\"\n    },\n    {\n     \"legType\": \"Hangup\",\n     \"timestamp\": \"2020-07-30T23:25:24Z\",\n     \"number\": \"+17078652255\",\n     \"username\": \"do nostrud\",\n     \"serviceId\": 21419401,\n     \"departmentName\": \"Headquarters\",\n     \"deviceType\": \"Polycom\",\n     \"menuName\": \"in Duis\",\n     \"menuPrompt\": \"laborum pariatur\",\n     \"menuOption\": \"labore ut pariatur\",\n     \"optionAction\": \"ea dolore sunt dolor ut\",\n     \"optionArg\": \"irure magna voluptate cupidatat\",\n     \"queueName\": \"amet nulla magna\"\n    }\n   ],\n   \"linkedId\": \"cam-z6-call5-1596151434.481005\",\n   \"startedAt\": \"2020-07-30T23:23:54Z\",\n   \"to\": {\n    \"connectedAt\": \"2020-07-30T23:23:54Z\",\n    \"disconnectedAt\": \"2020-07-30T23:25:24Z\",\n    \"number\": \"6172456167\",\n    \"numberE164\": \"+16172456167\",\n    \"name\": \"John Smith\",\n    \"username\": \"jsmith@yourorganization.com\",\n    \"serviceId\": 70651458,\n    \"departmentName\": \"Headquarters\",\n    \"deviceType\": \"Polycom\"\n   },\n   \"version\": {\n    \"major\": 35255757,\n    \"minor\": 2959153,\n    \"point\": -70998916,\n    \"label\": \"in elit tempor\"\n   },\n   \"answeredAt\": \"2020-07-30T23:23:54Z\",\n   \"initialQueueName\": \"e\",\n   \"joinedLinkedIds\": [\n    \"incididunt quis\",\n    \"mollit occaecat\"\n   ]\n  },\n  {\n   \"direction\": \"Inbound\",\n   \"disposition\": \"Voicemail\",\n   \"duration\": 53480102,\n   \"endedAt\": \"2020-07-30T23:25:24Z\",\n   \"from\": {\n    \"connectedAt\": \"2020-07-30T23:23:54Z\",\n    \"disconnectedAt\": \"2020-07-30T23:25:24Z\",\n    \"number\": \"6172456167\",\n    \"numberE164\": \"+16172456167\",\n    \"name\": \"John Smith\",\n    \"username\": \"jsmith@yourorganization.com\",\n    \"serviceId\": 69635691,\n    \"departmentName\": \"Headquarters\",\n    \"deviceType\": \"Polycom\"\n   },\n   \"legs\": [\n    {\n     \"legType\": \"Hangup\",\n     \"timestamp\": \"2020-07-30T23:25:24Z\",\n     \"number\": \"+17078652255\",\n     \"username\": \"occaecat qu\",\n     \"serviceId\": -42372249,\n     \"departmentName\": \"Headquarters\",\n     \"deviceType\": \"Polycom\",\n     \"menuName\": \"fugiat\",\n     \"menuPrompt\": \"officia ullamco nostrud labor\",\n     \"menuOption\": \"laboris ut aliqua qui deserunt\",\n     \"optionAction\": \"am\",\n     \"optionArg\": \"labore pariatur magna sit\",\n     \"queueName\": \"exercitation\"\n    },\n    {\n     \"legType\": \"Hangup\",\n     \"timestamp\": \"2020-07-30T23:25:24Z\",\n     \"number\": \"+17078652255\",\n     \"username\": \"sed irure eiusmod\",\n     \"serviceId\": 66279402,\n     \"departmentName\": \"Headquarters\",\n     \"deviceType\": \"Polycom\",\n     \"menuName\": \"dolor laborum\",\n     \"menuPrompt\": \"pariatur velit ullamco\",\n     \"menuOption\": \"commodo\",\n     \"optionAction\": \"aliquip officia dolor aliqua in\",\n     \"optionArg\": \"in occaecat do amet\",\n     \"queueName\": \"in in fugiat\"\n    }\n   ],\n   \"linkedId\": \"cam-z6-call5-1596151434.481005\",\n   \"startedAt\": \"2020-07-30T23:23:54Z\",\n   \"to\": {\n    \"connectedAt\": \"2020-07-30T23:23:54Z\",\n    \"disconnectedAt\": \"2020-07-30T23:25:24Z\",\n    \"number\": \"6172456167\",\n    \"numberE164\": \"+16172456167\",\n    \"name\": \"John Smith\",\n    \"username\": \"jsmith@yourorganization.com\",\n    \"serviceId\": 36902789,\n    \"departmentName\": \"Headquarters\",\n    \"deviceType\": \"Polycom\"\n   },\n   \"version\": {\n    \"major\": -46193075,\n    \"minor\": 58032236,\n    \"point\": 36222129,\n    \"label\": \"deserunt\"\n   },\n   \"answeredAt\": \"2020-07-30T23:23:54Z\",\n   \"initialQueueName\": \"magna es\",\n   \"joinedLinkedIds\": [\n    \"nulla mollit Ut fugiat Lorem\",\n    \"in ipsum ea\"\n   ]\n  }\n ],\n \"pagination\": {\n  \"cursor\": \"enim \",\n  \"limit\": -31564370\n },\n \"status\": -59765142,\n \"msg\": \"adipisicing enim sit Lorem\"\n}"
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calls?after=<string>&before=<string>&departmentName=<string>&departmentId=<string>&username=<string>&userId=<string>&direction=<string>&organization=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "departmentName",
											"value": "<string>"
										},
										{
											"key": "departmentId",
											"value": "<string>"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "userId",
											"value": "<string>"
										},
										{
											"key": "direction",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get one call",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/calls/:call-id",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"calls",
								":call-id"
							],
							"query": [
								{
									"key": "organization",
									"value": "<string>",
									"description": "Name of the organization that the call is a part of",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "call-id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Call identifier."
								}
							]
						},
						"description": "Get the details of one call within your organization."
					},
					"response": [
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calls/:call-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls",
										":call-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "call-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calls/:call-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls",
										":call-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "call-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calls/:call-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls",
										":call-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "call-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calls/:call-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls",
										":call-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "call-id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"direction\": \"Inbound\",\n  \"disposition\": \"Voicemail\",\n  \"duration\": 10692200,\n  \"endedAt\": \"2020-07-30T23:25:24Z\",\n  \"from\": {\n   \"connectedAt\": \"2020-07-30T23:23:54Z\",\n   \"disconnectedAt\": \"2020-07-30T23:25:24Z\",\n   \"number\": \"6172456167\",\n   \"numberE164\": \"+16172456167\",\n   \"name\": \"John Smith\",\n   \"username\": \"jsmith@yourorganization.com\",\n   \"serviceId\": 97872615,\n   \"departmentName\": \"Headquarters\",\n   \"deviceType\": \"Polycom\"\n  },\n  \"legs\": [\n   {\n    \"legType\": \"Hangup\",\n    \"timestamp\": \"2020-07-30T23:25:24Z\",\n    \"number\": \"+17078652255\",\n    \"username\": \"irure ullamco enim veni\",\n    \"serviceId\": -29640611,\n    \"departmentName\": \"Headquarters\",\n    \"deviceType\": \"Polycom\",\n    \"menuName\": \"consequat sed labore enim\",\n    \"menuPrompt\": \"mollit laboris aliqua\",\n    \"menuOption\": \"magna ea\",\n    \"optionAction\": \"laboris ut ipsum et\",\n    \"optionArg\": \"do laboris\",\n    \"queueName\": \"id\"\n   },\n   {\n    \"legType\": \"Hangup\",\n    \"timestamp\": \"2020-07-30T23:25:24Z\",\n    \"number\": \"+17078652255\",\n    \"username\": \"consequat minim\",\n    \"serviceId\": 55501523,\n    \"departmentName\": \"Headquarters\",\n    \"deviceType\": \"Polycom\",\n    \"menuName\": \"Duis magna eu\",\n    \"menuPrompt\": \"nulla do nisi\",\n    \"menuOption\": \"elit Excepteur tempor\",\n    \"optionAction\": \"ea voluptate ad pariatur\",\n    \"optionArg\": \"proident deserunt ipsum eu\",\n    \"queueName\": \"nisi eiusmod nostrud\"\n   }\n  ],\n  \"linkedId\": \"cam-z6-call5-1596151434.481005\",\n  \"startedAt\": \"2020-07-30T23:23:54Z\",\n  \"to\": {\n   \"connectedAt\": \"2020-07-30T23:23:54Z\",\n   \"disconnectedAt\": \"2020-07-30T23:25:24Z\",\n   \"number\": \"6172456167\",\n   \"numberE164\": \"+16172456167\",\n   \"name\": \"John Smith\",\n   \"username\": \"jsmith@yourorganization.com\",\n   \"serviceId\": -33053098,\n   \"departmentName\": \"Headquarters\",\n   \"deviceType\": \"Polycom\"\n  },\n  \"version\": {\n   \"major\": 38970118,\n   \"minor\": -9567377,\n   \"point\": -56523811,\n   \"label\": \"esse cillum\"\n  },\n  \"answeredAt\": \"2020-07-30T23:23:54Z\",\n  \"initialQueueName\": \"adipisicing cillum\",\n  \"joinedLinkedIds\": [\n   \"qui veniam labo\",\n   \"eiusmod sit\"\n  ]\n },\n \"status\": 55210061,\n \"msg\": \"cillum in\"\n}"
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calls/:call-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls",
										":call-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "call-id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calls/:call-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls",
										":call-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "call-id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found, status code 13004",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calls/:call-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls",
										":call-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "call-id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get recordings for a call",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/calls/:call-id/call-recordings",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"calls",
								":call-id",
								"call-recordings"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for item pagination. See 'cursor' field from previous response.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of items per page.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "call-id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Call identifier."
								}
							]
						},
						"description": "Return all of the call recording details for a specific call. Returns the recording details for the linkedId."
					},
					"response": [
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calls/:call-id/call-recordings?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls",
										":call-id",
										"call-recordings"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									],
									"variable": [
										{
											"key": "call-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calls/:call-id/call-recordings?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls",
										":call-id",
										"call-recordings"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									],
									"variable": [
										{
											"key": "call-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calls/:call-id/call-recordings?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls",
										":call-id",
										"call-recordings"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									],
									"variable": [
										{
											"key": "call-id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calls/:call-id/call-recordings?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls",
										":call-id",
										"call-recordings"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									],
									"variable": [
										{
											"key": "call-id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calls/:call-id/call-recordings?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls",
										":call-id",
										"call-recordings"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									],
									"variable": [
										{
											"key": "call-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calls/:call-id/call-recordings?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls",
										":call-id",
										"call-recordings"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									],
									"variable": [
										{
											"key": "call-id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"direction\": \"out\",\n   \"duration\": 1663447,\n   \"endedAt\": \"2020-06-29T16:47:30+01:00\",\n   \"from\": \"+17008573521\",\n   \"linkedId\": \"cam-z6-call5-1495559375.646708\",\n   \"organization\": \"fuze\",\n   \"pbx\": \"fuze\",\n   \"recordingId\": -11048819,\n   \"retainedUntil\": \"2020-07-29T16:47:30+01:00\",\n   \"startedAt\": \"2020-06-29T16:46:46+01:00\",\n   \"to\": \"+17008573520\",\n   \"userId\": 32096822,\n   \"departmentId\": 65767851,\n   \"locationId\": -51156091,\n   \"extension\": \"3520\",\n   \"queueName\": \"fuze-co7\"\n  },\n  {\n   \"direction\": \"out\",\n   \"duration\": 94677377,\n   \"endedAt\": \"2020-06-29T16:47:30+01:00\",\n   \"from\": \"+17008573521\",\n   \"linkedId\": \"cam-z6-call5-1495559375.646708\",\n   \"organization\": \"fuze\",\n   \"pbx\": \"fuze\",\n   \"recordingId\": 34215398,\n   \"retainedUntil\": \"2020-07-29T16:47:30+01:00\",\n   \"startedAt\": \"2020-06-29T16:46:46+01:00\",\n   \"to\": \"+17008573520\",\n   \"userId\": 62979714,\n   \"departmentId\": -97123463,\n   \"locationId\": 21042962,\n   \"extension\": \"3520\",\n   \"queueName\": \"fuze-co7\"\n  }\n ],\n \"pagination\": {\n  \"cursor\": \"pariatur nostrud non reprehe\",\n  \"limit\": -6672700\n },\n \"status\": 70475726,\n \"msg\": \"enim dolore sed incididunt do\"\n}"
						},
						{
							"name": "Not found, status code 13004",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calls/:call-id/call-recordings?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls",
										":call-id",
										"call-recordings"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									],
									"variable": [
										{
											"key": "call-id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "chats",
			"item": [
				{
					"name": "messages",
					"item": [
						{
							"name": "Get the list of messages for conversation",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{fuzeBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Fuze-Origin",
										"value": "Fuze Developer Center Postman Collection",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://developer.fuze.com/api/v1/chats/:chat-id/messages",
									"protocol": "https",
									"host": [
										"developer",
										"fuze",
										"com"
									],
									"path": [
										"api",
										"v1",
										"chats",
										":chat-id",
										"messages"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for item pagination. See 'cursor' field from previous response.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "100",
											"description": "Number of items per page.",
											"disabled": true
										},
										{
											"key": "organization",
											"value": "<string>",
											"description": "Name of the organization that the conversation is a part of",
											"disabled": true
										},
										{
											"key": "kind",
											"value": "<string>",
											"description": "Message kinds, comma separated, without spaces.",
											"disabled": true
										},
										{
											"key": "sender",
											"value": "<string>",
											"description": "Sender of the message",
											"disabled": true
										},
										{
											"key": "after",
											"value": "<string>",
											"description": "Messages posted or updated after this date. This parameter is optional but if you provide 'after' you must also provide 'before'. When neither 'after' nor 'before' are provided the default date range is 'the last 24 hours'. When both 'after' and 'before' are provided, the maximum acceptable date range is 90 days.",
											"disabled": true
										},
										{
											"key": "before",
											"value": "<string>",
											"description": "Messages posted or updated before this date. This parameter is optional but if you provide 'before' you must also provide 'after'. When neither 'after' nor 'before' are provided the default date range is 'the last 24 hours'. When both 'after' and 'before' are provided, the maximum acceptable date range is 90 days.",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "chat-id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Chat identifier."
										}
									]
								},
								"description": "Get the list of chat message contents for a single conversation."
							},
							"response": [
								{
									"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/messages?cursor=<string>&limit=100&organization=<string>&kind=<string>&sender=<string>&after=<string>&before=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"messages"
											],
											"query": [
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "organization",
													"value": "<string>"
												},
												{
													"key": "kind",
													"value": "<string>"
												},
												{
													"key": "sender",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized, status code 13000 or 13001",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/messages?cursor=<string>&limit=100&organization=<string>&kind=<string>&sender=<string>&after=<string>&before=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"messages"
											],
											"query": [
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "organization",
													"value": "<string>"
												},
												{
													"key": "kind",
													"value": "<string>"
												},
												{
													"key": "sender",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Too many requests, status code 13006",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/messages?cursor=<string>&limit=100&organization=<string>&kind=<string>&sender=<string>&after=<string>&before=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"messages"
											],
											"query": [
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "organization",
													"value": "<string>"
												},
												{
													"key": "kind",
													"value": "<string>"
												},
												{
													"key": "sender",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad request, status code 13003",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/messages?cursor=<string>&limit=100&organization=<string>&kind=<string>&sender=<string>&after=<string>&before=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"messages"
											],
											"query": [
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "organization",
													"value": "<string>"
												},
												{
													"key": "kind",
													"value": "<string>"
												},
												{
													"key": "sender",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden, status code 13002",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/messages?cursor=<string>&limit=100&organization=<string>&kind=<string>&sender=<string>&after=<string>&before=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"messages"
											],
											"query": [
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "organization",
													"value": "<string>"
												},
												{
													"key": "kind",
													"value": "<string>"
												},
												{
													"key": "sender",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Ok, status code 0",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/messages?cursor=<string>&limit=100&organization=<string>&kind=<string>&sender=<string>&after=<string>&before=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"messages"
											],
											"query": [
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "organization",
													"value": "<string>"
												},
												{
													"key": "kind",
													"value": "<string>"
												},
												{
													"key": "sender",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"id\": \"-MDtdifosKW1OKC1cBY\",\n   \"kind\": \"deactivation\",\n   \"postedAt\": \"2020-08-04T13:26:30.900Z\",\n   \"updatedAt\": \"2020-08-04T13:26:30.900Z\",\n   \"editedAt\": \"2020-08-04T13:26:30.900Z\",\n   \"expiresAt\": \"2020-08-04T13:26:30.900Z\",\n   \"deleted\": false,\n   \"deletedAt\": \"2020-08-04T13:26:30.900Z\",\n   \"author\": {\n    \"userId\": 14977715,\n    \"phoneNumber\": \"+18005551111\",\n    \"extension\": \"*123\",\n    \"partial\": \"654789213\",\n    \"jid\": \"1234567890\",\n    \"application\": \"chat\",\n    \"type\": \"jid\"\n   },\n   \"chatId\": \"Yp3jjPRwFJHX40s8xAnhvilAefY=\",\n   \"content\": \"Lorem ipsum dolor...\",\n   \"previousContents\": [\n    {\n     \"content\": \"some text message\",\n     \"postedAt\": \"2020-09-11T12:03:09.468Z\"\n    },\n    {\n     \"content\": \"some text message\",\n     \"postedAt\": \"2020-09-11T12:03:09.468Z\"\n    }\n   ],\n   \"files\": [\n    {\n     \"fileId\": 94018620,\n     \"name\": \"20200911_133026.jpg\",\n     \"size\": 54295318,\n     \"ext\": \"jpg\",\n     \"url\": \"https://developer.fuze.com/api/v1/chats/CHATID/uploads/UPLOADID/files/FILEID\"\n    },\n    {\n     \"fileId\": 14159194,\n     \"name\": \"20200911_133026.jpg\",\n     \"size\": -45266610,\n     \"ext\": \"jpg\",\n     \"url\": \"https://developer.fuze.com/api/v1/chats/CHATID/uploads/UPLOADID/files/FILEID\"\n    }\n   ],\n   \"call\": {\n    \"id\": \"ukp-z19-call5-1599823330.1041172\",\n    \"from\": {\n     \"entity\": {\n      \"userId\": 33026127,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"application\"\n     },\n     \"name\": \"John\",\n     \"number\": \"+18005551023\"\n    },\n    \"to\": {\n     \"entity\": {\n      \"userId\": 58061146,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"ext\"\n     },\n     \"name\": \"John\",\n     \"number\": \"+18005551023\"\n    },\n    \"direction\": \"OUTGOING\",\n    \"dialedNumber\": \"8005554455\"\n   },\n   \"invite\": {\n    \"entities\": [\n     {\n      \"userId\": 87979830,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"partial\"\n     },\n     {\n      \"userId\": 75237851,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"ext\"\n     }\n    ],\n    \"redeemed\": false\n   },\n   \"pending\": {\n    \"names\": [\n     \"dolor fugiat incididunt\",\n     \"ipsum est\"\n    ]\n   },\n   \"kick\": {\n    \"entities\": [\n     {\n      \"userId\": -35216095,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"jid\"\n     },\n     {\n      \"userId\": 4840810,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"phone\"\n     }\n    ]\n   },\n   \"rename\": {\n    \"name\": \"New awesome chat name\",\n    \"previousName\": \"The original chat name\"\n   },\n   \"deactivation\": [\n    {\n     \"reason\": \"ADMIN_REQUEST\",\n     \"requester\": {\n      \"userId\": -18605562,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"phone\"\n     },\n     \"entityIds\": [\n      {\n       \"userId\": 30557027,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"phone\"\n      },\n      {\n       \"userId\": -87294309,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"application\"\n      }\n     ]\n    },\n    {\n     \"reason\": \"ADMIN_REQUEST\",\n     \"requester\": {\n      \"userId\": -31615934,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"partial\"\n     },\n     \"entityIds\": [\n      {\n       \"userId\": -80977640,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"jid\"\n      },\n      {\n       \"userId\": 99471738,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"application\"\n      }\n     ]\n    }\n   ],\n   \"meeting\": {\n    \"instanceId\": 55126598,\n    \"meetingId\": -7575850,\n    \"title\": \"My awesome meeting\",\n    \"creationTime\": \"2020-08-04T13:29:21Z\",\n    \"startTime\": \"2020-08-04T13:29:21Z\",\n    \"endTime\": \"2020-08-04T13:29:21Z\",\n    \"starter\": {\n     \"userId\": 80298733,\n     \"phoneNumber\": \"+18005551111\",\n     \"extension\": \"*123\",\n     \"partial\": \"654789213\",\n     \"jid\": \"1234567890\",\n     \"application\": \"chat\",\n     \"type\": \"jid\"\n    },\n    \"participants\": [\n     {\n      \"userId\": -18682913,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"partial\"\n     },\n     {\n      \"userId\": -91433429,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"user\"\n     }\n    ]\n   },\n   \"attachments\": [\n    {\n     \"id\": \"615487\",\n     \"fileName\": \"filename.jpg\",\n     \"fileSize\": -70282502,\n     \"fileType\": \"jpg\",\n     \"canDownload\": false,\n     \"previewUrl\": \"https://some.host.com/path/to/preview\",\n     \"fileOrigin\": \"?\",\n     \"favIcon\": \"https://...\",\n     \"description\": \"Here's the sample file you requested\",\n     \"url\": \"https://...\",\n     \"previewAvailable\": false\n    },\n    {\n     \"id\": \"615487\",\n     \"fileName\": \"filename.jpg\",\n     \"fileSize\": -15820884,\n     \"fileType\": \"jpg\",\n     \"canDownload\": false,\n     \"previewUrl\": \"https://some.host.com/path/to/preview\",\n     \"fileOrigin\": \"?\",\n     \"favIcon\": \"https://...\",\n     \"description\": \"Here's the sample file you requested\",\n     \"url\": \"https://...\",\n     \"previewAvailable\": false\n    }\n   ],\n   \"reactions\": [\n    {\n     \"reaction\": \"😄\",\n     \"entities\": [\n      {\n       \"userId\": -46899655,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"partial\"\n      },\n      {\n       \"userId\": 81348005,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"user\"\n      }\n     ]\n    },\n    {\n     \"reaction\": \"😄\",\n     \"entities\": [\n      {\n       \"userId\": -3455042,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"phone\"\n      },\n      {\n       \"userId\": 26612518,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"jid\"\n      }\n     ]\n    }\n   ],\n   \"error\": \"undelivered\"\n  },\n  {\n   \"id\": \"-MDtdifosKW1OKC1cBY\",\n   \"kind\": \"upload\",\n   \"postedAt\": \"2020-08-04T13:26:30.900Z\",\n   \"updatedAt\": \"2020-08-04T13:26:30.900Z\",\n   \"editedAt\": \"2020-08-04T13:26:30.900Z\",\n   \"expiresAt\": \"2020-08-04T13:26:30.900Z\",\n   \"deleted\": false,\n   \"deletedAt\": \"2020-08-04T13:26:30.900Z\",\n   \"author\": {\n    \"userId\": -28143654,\n    \"phoneNumber\": \"+18005551111\",\n    \"extension\": \"*123\",\n    \"partial\": \"654789213\",\n    \"jid\": \"1234567890\",\n    \"application\": \"chat\",\n    \"type\": \"application\"\n   },\n   \"chatId\": \"Yp3jjPRwFJHX40s8xAnhvilAefY=\",\n   \"content\": \"Lorem ipsum dolor...\",\n   \"previousContents\": [\n    {\n     \"content\": \"some text message\",\n     \"postedAt\": \"2020-09-11T12:03:09.468Z\"\n    },\n    {\n     \"content\": \"some text message\",\n     \"postedAt\": \"2020-09-11T12:03:09.468Z\"\n    }\n   ],\n   \"files\": [\n    {\n     \"fileId\": 94977819,\n     \"name\": \"20200911_133026.jpg\",\n     \"size\": 27612183,\n     \"ext\": \"jpg\",\n     \"url\": \"https://developer.fuze.com/api/v1/chats/CHATID/uploads/UPLOADID/files/FILEID\"\n    },\n    {\n     \"fileId\": -15793471,\n     \"name\": \"20200911_133026.jpg\",\n     \"size\": 98162917,\n     \"ext\": \"jpg\",\n     \"url\": \"https://developer.fuze.com/api/v1/chats/CHATID/uploads/UPLOADID/files/FILEID\"\n    }\n   ],\n   \"call\": {\n    \"id\": \"ukp-z19-call5-1599823330.1041172\",\n    \"from\": {\n     \"entity\": {\n      \"userId\": 43092861,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"application\"\n     },\n     \"name\": \"John\",\n     \"number\": \"+18005551023\"\n    },\n    \"to\": {\n     \"entity\": {\n      \"userId\": -84393321,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"application\"\n     },\n     \"name\": \"John\",\n     \"number\": \"+18005551023\"\n    },\n    \"direction\": \"INCOMING\",\n    \"dialedNumber\": \"8005554455\"\n   },\n   \"invite\": {\n    \"entities\": [\n     {\n      \"userId\": -97679570,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"phone\"\n     },\n     {\n      \"userId\": 6186483,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"phone\"\n     }\n    ],\n    \"redeemed\": false\n   },\n   \"pending\": {\n    \"names\": [\n     \"Excepteur \",\n     \"velit exercitation\"\n    ]\n   },\n   \"kick\": {\n    \"entities\": [\n     {\n      \"userId\": 55141328,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"jid\"\n     },\n     {\n      \"userId\": 87155218,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"ext\"\n     }\n    ]\n   },\n   \"rename\": {\n    \"name\": \"New awesome chat name\",\n    \"previousName\": \"The original chat name\"\n   },\n   \"deactivation\": [\n    {\n     \"reason\": \"ADMIN_REQUEST\",\n     \"requester\": {\n      \"userId\": -57924208,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"application\"\n     },\n     \"entityIds\": [\n      {\n       \"userId\": -20914487,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"phone\"\n      },\n      {\n       \"userId\": -31034575,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"application\"\n      }\n     ]\n    },\n    {\n     \"reason\": \"INVITER_REQUEST\",\n     \"requester\": {\n      \"userId\": 9110200,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"ext\"\n     },\n     \"entityIds\": [\n      {\n       \"userId\": -87953674,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"ext\"\n      },\n      {\n       \"userId\": 52941978,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"user\"\n      }\n     ]\n    }\n   ],\n   \"meeting\": {\n    \"instanceId\": -12129642,\n    \"meetingId\": 71073739,\n    \"title\": \"My awesome meeting\",\n    \"creationTime\": \"2020-08-04T13:29:21Z\",\n    \"startTime\": \"2020-08-04T13:29:21Z\",\n    \"endTime\": \"2020-08-04T13:29:21Z\",\n    \"starter\": {\n     \"userId\": -70529518,\n     \"phoneNumber\": \"+18005551111\",\n     \"extension\": \"*123\",\n     \"partial\": \"654789213\",\n     \"jid\": \"1234567890\",\n     \"application\": \"chat\",\n     \"type\": \"jid\"\n    },\n    \"participants\": [\n     {\n      \"userId\": -56068304,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"user\"\n     },\n     {\n      \"userId\": 98160652,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"phone\"\n     }\n    ]\n   },\n   \"attachments\": [\n    {\n     \"id\": \"615487\",\n     \"fileName\": \"filename.jpg\",\n     \"fileSize\": -69170919,\n     \"fileType\": \"jpg\",\n     \"canDownload\": false,\n     \"previewUrl\": \"https://some.host.com/path/to/preview\",\n     \"fileOrigin\": \"?\",\n     \"favIcon\": \"https://...\",\n     \"description\": \"Here's the sample file you requested\",\n     \"url\": \"https://...\",\n     \"previewAvailable\": false\n    },\n    {\n     \"id\": \"615487\",\n     \"fileName\": \"filename.jpg\",\n     \"fileSize\": -86354046,\n     \"fileType\": \"jpg\",\n     \"canDownload\": false,\n     \"previewUrl\": \"https://some.host.com/path/to/preview\",\n     \"fileOrigin\": \"?\",\n     \"favIcon\": \"https://...\",\n     \"description\": \"Here's the sample file you requested\",\n     \"url\": \"https://...\",\n     \"previewAvailable\": false\n    }\n   ],\n   \"reactions\": [\n    {\n     \"reaction\": \"😄\",\n     \"entities\": [\n      {\n       \"userId\": 25482090,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"ext\"\n      },\n      {\n       \"userId\": -64002664,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"jid\"\n      }\n     ]\n    },\n    {\n     \"reaction\": \"😄\",\n     \"entities\": [\n      {\n       \"userId\": -15501193,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"user\"\n      },\n      {\n       \"userId\": 41469043,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"ext\"\n      }\n     ]\n    }\n   ],\n   \"error\": \"undelivered\"\n  }\n ],\n \"pagination\": {\n  \"cursor\": \"id\",\n  \"limit\": -55646527\n },\n \"status\": -86303589,\n \"msg\": \"pariatur voluptate esse occaecat\"\n}"
								},
								{
									"name": "Not found, status code 13004",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/messages?cursor=<string>&limit=100&organization=<string>&kind=<string>&sender=<string>&after=<string>&before=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"messages"
											],
											"query": [
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "organization",
													"value": "<string>"
												},
												{
													"key": "kind",
													"value": "<string>"
												},
												{
													"key": "sender",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get one chat message in a conversation",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{fuzeBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Fuze-Origin",
										"value": "Fuze Developer Center Postman Collection",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://developer.fuze.com/api/v1/chats/:chat-id/messages/:message-id",
									"protocol": "https",
									"host": [
										"developer",
										"fuze",
										"com"
									],
									"path": [
										"api",
										"v1",
										"chats",
										":chat-id",
										"messages",
										":message-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>",
											"description": "Name of the organization that the conversation is a part of",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "chat-id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Chat identifier."
										},
										{
											"key": "message-id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Message identifier."
										}
									]
								},
								"description": "Get one message from a chat conversation."
							},
							"response": [
								{
									"name": "Unauthorized, status code 13000 or 13001",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/messages/:message-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"messages",
												":message-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												},
												{
													"key": "message-id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Ok, status code 0",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/messages/:message-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"messages",
												":message-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												},
												{
													"key": "message-id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": {\n  \"id\": \"-MDtdifosKW1OKC1cBY\",\n  \"kind\": \"invite\",\n  \"postedAt\": \"2020-08-04T13:26:30.900Z\",\n  \"updatedAt\": \"2020-08-04T13:26:30.900Z\",\n  \"editedAt\": \"2020-08-04T13:26:30.900Z\",\n  \"expiresAt\": \"2020-08-04T13:26:30.900Z\",\n  \"deleted\": false,\n  \"deletedAt\": \"2020-08-04T13:26:30.900Z\",\n  \"author\": {\n   \"userId\": -21440476,\n   \"phoneNumber\": \"+18005551111\",\n   \"extension\": \"*123\",\n   \"partial\": \"654789213\",\n   \"jid\": \"1234567890\",\n   \"application\": \"chat\",\n   \"type\": \"phone\"\n  },\n  \"chatId\": \"Yp3jjPRwFJHX40s8xAnhvilAefY=\",\n  \"content\": \"Lorem ipsum dolor...\",\n  \"previousContents\": [\n   {\n    \"content\": \"some text message\",\n    \"postedAt\": \"2020-09-11T12:03:09.468Z\"\n   },\n   {\n    \"content\": \"some text message\",\n    \"postedAt\": \"2020-09-11T12:03:09.468Z\"\n   }\n  ],\n  \"files\": [\n   {\n    \"fileId\": -68015761,\n    \"name\": \"20200911_133026.jpg\",\n    \"size\": -16256443,\n    \"ext\": \"jpg\",\n    \"url\": \"https://developer.fuze.com/api/v1/chats/CHATID/uploads/UPLOADID/files/FILEID\"\n   },\n   {\n    \"fileId\": 51195282,\n    \"name\": \"20200911_133026.jpg\",\n    \"size\": -27243289,\n    \"ext\": \"jpg\",\n    \"url\": \"https://developer.fuze.com/api/v1/chats/CHATID/uploads/UPLOADID/files/FILEID\"\n   }\n  ],\n  \"call\": {\n   \"id\": \"ukp-z19-call5-1599823330.1041172\",\n   \"from\": {\n    \"entity\": {\n     \"userId\": 51356278,\n     \"phoneNumber\": \"+18005551111\",\n     \"extension\": \"*123\",\n     \"partial\": \"654789213\",\n     \"jid\": \"1234567890\",\n     \"application\": \"chat\",\n     \"type\": \"phone\"\n    },\n    \"name\": \"John\",\n    \"number\": \"+18005551023\"\n   },\n   \"to\": {\n    \"entity\": {\n     \"userId\": 79281460,\n     \"phoneNumber\": \"+18005551111\",\n     \"extension\": \"*123\",\n     \"partial\": \"654789213\",\n     \"jid\": \"1234567890\",\n     \"application\": \"chat\",\n     \"type\": \"jid\"\n    },\n    \"name\": \"John\",\n    \"number\": \"+18005551023\"\n   },\n   \"direction\": \"INCOMING\",\n   \"dialedNumber\": \"8005554455\"\n  },\n  \"invite\": {\n   \"entities\": [\n    {\n     \"userId\": 80484835,\n     \"phoneNumber\": \"+18005551111\",\n     \"extension\": \"*123\",\n     \"partial\": \"654789213\",\n     \"jid\": \"1234567890\",\n     \"application\": \"chat\",\n     \"type\": \"jid\"\n    },\n    {\n     \"userId\": -51883279,\n     \"phoneNumber\": \"+18005551111\",\n     \"extension\": \"*123\",\n     \"partial\": \"654789213\",\n     \"jid\": \"1234567890\",\n     \"application\": \"chat\",\n     \"type\": \"user\"\n    }\n   ],\n   \"redeemed\": false\n  },\n  \"pending\": {\n   \"names\": [\n    \"in ut Ut\",\n    \"et in\"\n   ]\n  },\n  \"kick\": {\n   \"entities\": [\n    {\n     \"userId\": -45670073,\n     \"phoneNumber\": \"+18005551111\",\n     \"extension\": \"*123\",\n     \"partial\": \"654789213\",\n     \"jid\": \"1234567890\",\n     \"application\": \"chat\",\n     \"type\": \"phone\"\n    },\n    {\n     \"userId\": -6753925,\n     \"phoneNumber\": \"+18005551111\",\n     \"extension\": \"*123\",\n     \"partial\": \"654789213\",\n     \"jid\": \"1234567890\",\n     \"application\": \"chat\",\n     \"type\": \"jid\"\n    }\n   ]\n  },\n  \"rename\": {\n   \"name\": \"New awesome chat name\",\n   \"previousName\": \"The original chat name\"\n  },\n  \"deactivation\": [\n   {\n    \"reason\": \"INVITER_REQUEST\",\n    \"requester\": {\n     \"userId\": -95176819,\n     \"phoneNumber\": \"+18005551111\",\n     \"extension\": \"*123\",\n     \"partial\": \"654789213\",\n     \"jid\": \"1234567890\",\n     \"application\": \"chat\",\n     \"type\": \"jid\"\n    },\n    \"entityIds\": [\n     {\n      \"userId\": 22980513,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"jid\"\n     },\n     {\n      \"userId\": -26605861,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"user\"\n     }\n    ]\n   },\n   {\n    \"reason\": \"ADMIN_REQUEST\",\n    \"requester\": {\n     \"userId\": -32418214,\n     \"phoneNumber\": \"+18005551111\",\n     \"extension\": \"*123\",\n     \"partial\": \"654789213\",\n     \"jid\": \"1234567890\",\n     \"application\": \"chat\",\n     \"type\": \"jid\"\n    },\n    \"entityIds\": [\n     {\n      \"userId\": -95520160,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"application\"\n     },\n     {\n      \"userId\": 89322886,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"user\"\n     }\n    ]\n   }\n  ],\n  \"meeting\": {\n   \"instanceId\": 76549079,\n   \"meetingId\": -32902285,\n   \"title\": \"My awesome meeting\",\n   \"creationTime\": \"2020-08-04T13:29:21Z\",\n   \"startTime\": \"2020-08-04T13:29:21Z\",\n   \"endTime\": \"2020-08-04T13:29:21Z\",\n   \"starter\": {\n    \"userId\": 18783749,\n    \"phoneNumber\": \"+18005551111\",\n    \"extension\": \"*123\",\n    \"partial\": \"654789213\",\n    \"jid\": \"1234567890\",\n    \"application\": \"chat\",\n    \"type\": \"application\"\n   },\n   \"participants\": [\n    {\n     \"userId\": -12491437,\n     \"phoneNumber\": \"+18005551111\",\n     \"extension\": \"*123\",\n     \"partial\": \"654789213\",\n     \"jid\": \"1234567890\",\n     \"application\": \"chat\",\n     \"type\": \"jid\"\n    },\n    {\n     \"userId\": 29636262,\n     \"phoneNumber\": \"+18005551111\",\n     \"extension\": \"*123\",\n     \"partial\": \"654789213\",\n     \"jid\": \"1234567890\",\n     \"application\": \"chat\",\n     \"type\": \"jid\"\n    }\n   ]\n  },\n  \"attachments\": [\n   {\n    \"id\": \"615487\",\n    \"fileName\": \"filename.jpg\",\n    \"fileSize\": 85793620,\n    \"fileType\": \"jpg\",\n    \"canDownload\": false,\n    \"previewUrl\": \"https://some.host.com/path/to/preview\",\n    \"fileOrigin\": \"?\",\n    \"favIcon\": \"https://...\",\n    \"description\": \"Here's the sample file you requested\",\n    \"url\": \"https://...\",\n    \"previewAvailable\": false\n   },\n   {\n    \"id\": \"615487\",\n    \"fileName\": \"filename.jpg\",\n    \"fileSize\": -82142348,\n    \"fileType\": \"jpg\",\n    \"canDownload\": false,\n    \"previewUrl\": \"https://some.host.com/path/to/preview\",\n    \"fileOrigin\": \"?\",\n    \"favIcon\": \"https://...\",\n    \"description\": \"Here's the sample file you requested\",\n    \"url\": \"https://...\",\n    \"previewAvailable\": false\n   }\n  ],\n  \"reactions\": [\n   {\n    \"reaction\": \"😄\",\n    \"entities\": [\n     {\n      \"userId\": 80153877,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"user\"\n     },\n     {\n      \"userId\": -86350495,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"phone\"\n     }\n    ]\n   },\n   {\n    \"reaction\": \"😄\",\n    \"entities\": [\n     {\n      \"userId\": -22257236,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"user\"\n     },\n     {\n      \"userId\": -64087284,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"phone\"\n     }\n    ]\n   }\n  ],\n  \"error\": \"undelivered\"\n },\n \"status\": 71674645,\n \"msg\": \"dolore Ut dolor\"\n}"
								},
								{
									"name": "Forbidden, status code 13002",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/messages/:message-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"messages",
												":message-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												},
												{
													"key": "message-id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found, status code 13004",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/messages/:message-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"messages",
												":message-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												},
												{
													"key": "message-id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad request, status code 13003",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/messages/:message-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"messages",
												":message-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												},
												{
													"key": "message-id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/messages/:message-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"messages",
												":message-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												},
												{
													"key": "message-id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Too many requests, status code 13006",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/messages/:message-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"messages",
												":message-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												},
												{
													"key": "message-id"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "uploads",
					"item": [
						{
							"name": "Get the list of uploads for a conversation",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{fuzeBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Fuze-Origin",
										"value": "Fuze Developer Center Postman Collection",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://developer.fuze.com/api/v1/chats/:chat-id/uploads",
									"protocol": "https",
									"host": [
										"developer",
										"fuze",
										"com"
									],
									"path": [
										"api",
										"v1",
										"chats",
										":chat-id",
										"uploads"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for item pagination. See 'cursor' field from previous response.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "100",
											"description": "Number of items per page.",
											"disabled": true
										},
										{
											"key": "organization",
											"value": "<string>",
											"description": "Name of the organization that the conversation is a part of",
											"disabled": true
										},
										{
											"key": "after",
											"value": "<string>",
											"description": "Messages posted or updated after this date. This parameter is optional but if you provide 'after' you must also provide 'before'. When neither 'after' nor 'before' are provided the default date range is 'the last 24 hours'. When both 'after' and 'before' are provided, the maximum acceptable date range is 90 days.",
											"disabled": true
										},
										{
											"key": "before",
											"value": "<string>",
											"description": "Messages posted or updated before this date. This parameter is optional but if you provide 'before' you must also provide 'after'. When neither 'after' nor 'before' are provided the default date range is 'the last 24 hours'. When both 'after' and 'before' are provided, the maximum acceptable date range is 90 days.",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "chat-id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Chat identifier."
										}
									]
								},
								"description": "Returns a list of details of uploaded files contained within the conversation."
							},
							"response": [
								{
									"name": "Unauthorized, status code 13000 or 13001",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/uploads?cursor=<string>&limit=100&organization=<string>&after=<string>&before=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"uploads"
											],
											"query": [
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "organization",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad request, status code 13003",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/uploads?cursor=<string>&limit=100&organization=<string>&after=<string>&before=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"uploads"
											],
											"query": [
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "organization",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Too many requests, status code 13006",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/uploads?cursor=<string>&limit=100&organization=<string>&after=<string>&before=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"uploads"
											],
											"query": [
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "organization",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/uploads?cursor=<string>&limit=100&organization=<string>&after=<string>&before=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"uploads"
											],
											"query": [
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "organization",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Ok, status code 0",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/uploads?cursor=<string>&limit=100&organization=<string>&after=<string>&before=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"uploads"
											],
											"query": [
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "organization",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"id\": \"-MDtdifosKW1OKC1cBY\",\n   \"postedAt\": \"2020-08-04T13:26:30.900Z\",\n   \"updatedAt\": \"2020-08-04T13:26:30.900Z\",\n   \"expiresAt\": \"2020-08-04T13:26:30.900Z\",\n   \"deleted\": false,\n   \"deletedAt\": \"2020-08-04T13:26:30.900Z\",\n   \"author\": {\n    \"userId\": -77130193,\n    \"phoneNumber\": \"+18005551111\",\n    \"extension\": \"*123\",\n    \"partial\": \"654789213\",\n    \"jid\": \"1234567890\",\n    \"application\": \"chat\",\n    \"type\": \"partial\"\n   },\n   \"files\": [\n    {\n     \"fileId\": 48763749,\n     \"name\": \"20200911_133026.jpg\",\n     \"size\": 16505983,\n     \"ext\": \"jpg\",\n     \"url\": \"https://developer.fuze.com/api/v1/chats/CHATID/uploads/UPLOADID/files/FILEID\"\n    },\n    {\n     \"fileId\": 1361004,\n     \"name\": \"20200911_133026.jpg\",\n     \"size\": -6380863,\n     \"ext\": \"jpg\",\n     \"url\": \"https://developer.fuze.com/api/v1/chats/CHATID/uploads/UPLOADID/files/FILEID\"\n    }\n   ]\n  },\n  {\n   \"id\": \"-MDtdifosKW1OKC1cBY\",\n   \"postedAt\": \"2020-08-04T13:26:30.900Z\",\n   \"updatedAt\": \"2020-08-04T13:26:30.900Z\",\n   \"expiresAt\": \"2020-08-04T13:26:30.900Z\",\n   \"deleted\": false,\n   \"deletedAt\": \"2020-08-04T13:26:30.900Z\",\n   \"author\": {\n    \"userId\": 77430724,\n    \"phoneNumber\": \"+18005551111\",\n    \"extension\": \"*123\",\n    \"partial\": \"654789213\",\n    \"jid\": \"1234567890\",\n    \"application\": \"chat\",\n    \"type\": \"phone\"\n   },\n   \"files\": [\n    {\n     \"fileId\": -676501,\n     \"name\": \"20200911_133026.jpg\",\n     \"size\": 8315914,\n     \"ext\": \"jpg\",\n     \"url\": \"https://developer.fuze.com/api/v1/chats/CHATID/uploads/UPLOADID/files/FILEID\"\n    },\n    {\n     \"fileId\": -92449421,\n     \"name\": \"20200911_133026.jpg\",\n     \"size\": 92064623,\n     \"ext\": \"jpg\",\n     \"url\": \"https://developer.fuze.com/api/v1/chats/CHATID/uploads/UPLOADID/files/FILEID\"\n    }\n   ]\n  }\n ],\n \"pagination\": {\n  \"cursor\": \"Lorem\",\n  \"limit\": -85201051\n },\n \"status\": -49907471,\n \"msg\": \"quis minim ullamco\"\n}"
								},
								{
									"name": "Forbidden, status code 13002",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/uploads?cursor=<string>&limit=100&organization=<string>&after=<string>&before=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"uploads"
											],
											"query": [
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "organization",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found, status code 13004",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/uploads?cursor=<string>&limit=100&organization=<string>&after=<string>&before=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"uploads"
											],
											"query": [
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "organization",
													"value": "<string>"
												},
												{
													"key": "after",
													"value": "<string>"
												},
												{
													"key": "before",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get details of a single uploaded file within a conversation",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{fuzeBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Fuze-Origin",
										"value": "Fuze Developer Center Postman Collection",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://developer.fuze.com/api/v1/chats/:chat-id/uploads/:upload-id",
									"protocol": "https",
									"host": [
										"developer",
										"fuze",
										"com"
									],
									"path": [
										"api",
										"v1",
										"chats",
										":chat-id",
										"uploads",
										":upload-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>",
											"description": "Name of the organization that the conversation is a part of",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "chat-id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Chat identifier."
										},
										{
											"key": "upload-id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Upload identifier."
										}
									]
								},
								"description": "Returns details of a single uploaded file within the specified conversation."
							},
							"response": [
								{
									"name": "Bad request, status code 13003",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/uploads/:upload-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"uploads",
												":upload-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												},
												{
													"key": "upload-id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/uploads/:upload-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"uploads",
												":upload-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												},
												{
													"key": "upload-id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found, status code 13004",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/uploads/:upload-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"uploads",
												":upload-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												},
												{
													"key": "upload-id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized, status code 13000 or 13001",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/uploads/:upload-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"uploads",
												":upload-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												},
												{
													"key": "upload-id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden, status code 13002",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/uploads/:upload-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"uploads",
												":upload-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												},
												{
													"key": "upload-id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Ok, status code 0",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/uploads/:upload-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"uploads",
												":upload-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												},
												{
													"key": "upload-id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": {\n  \"id\": \"-MDtdifosKW1OKC1cBY\",\n  \"postedAt\": \"2020-08-04T13:26:30.900Z\",\n  \"updatedAt\": \"2020-08-04T13:26:30.900Z\",\n  \"expiresAt\": \"2020-08-04T13:26:30.900Z\",\n  \"deleted\": false,\n  \"deletedAt\": \"2020-08-04T13:26:30.900Z\",\n  \"author\": {\n   \"userId\": 53296446,\n   \"phoneNumber\": \"+18005551111\",\n   \"extension\": \"*123\",\n   \"partial\": \"654789213\",\n   \"jid\": \"1234567890\",\n   \"application\": \"chat\",\n   \"type\": \"ext\"\n  },\n  \"files\": [\n   {\n    \"fileId\": -98177639,\n    \"name\": \"20200911_133026.jpg\",\n    \"size\": -9823360,\n    \"ext\": \"jpg\",\n    \"url\": \"https://developer.fuze.com/api/v1/chats/CHATID/uploads/UPLOADID/files/FILEID\"\n   },\n   {\n    \"fileId\": -28342802,\n    \"name\": \"20200911_133026.jpg\",\n    \"size\": -19620017,\n    \"ext\": \"jpg\",\n    \"url\": \"https://developer.fuze.com/api/v1/chats/CHATID/uploads/UPLOADID/files/FILEID\"\n   }\n  ]\n },\n \"status\": -13228580,\n \"msg\": \"in dolore nulla\"\n}"
								},
								{
									"name": "Too many requests, status code 13006",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/uploads/:upload-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"uploads",
												":upload-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												},
												{
													"key": "upload-id"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get the URL to download a file",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{fuzeBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Fuze-Origin",
										"value": "Fuze Developer Center Postman Collection",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://developer.fuze.com/api/v1/chats/:chat-id/uploads/:upload-id/files/:file-id",
									"protocol": "https",
									"host": [
										"developer",
										"fuze",
										"com"
									],
									"path": [
										"api",
										"v1",
										"chats",
										":chat-id",
										"uploads",
										":upload-id",
										"files",
										":file-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>",
											"description": "Name of the organization that the conversation is a part of",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "chat-id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Chat identifier."
										},
										{
											"key": "upload-id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Upload identifier."
										},
										{
											"key": "file-id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) File identifier."
										}
									]
								},
								"description": "Returns the URL to download a file uploaded in a conversation for a particular fileId."
							},
							"response": [
								{
									"name": "Temporary Redirect",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/uploads/:upload-id/files/:file-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"uploads",
												":upload-id",
												"files",
												":file-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												},
												{
													"key": "upload-id"
												},
												{
													"key": "file-id"
												}
											]
										}
									},
									"status": "Temporary Redirect (since HTTP/1.1)",
									"code": 307,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"metadata\": {},\n \"status\": -41150344,\n \"entity\": {}\n}"
								},
								{
									"name": "Not found, status code 13004",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/uploads/:upload-id/files/:file-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"uploads",
												":upload-id",
												"files",
												":file-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												},
												{
													"key": "upload-id"
												},
												{
													"key": "file-id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad request, status code 13003",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/uploads/:upload-id/files/:file-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"uploads",
												":upload-id",
												"files",
												":file-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												},
												{
													"key": "upload-id"
												},
												{
													"key": "file-id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Too many requests, status code 13006",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/uploads/:upload-id/files/:file-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"uploads",
												":upload-id",
												"files",
												":file-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												},
												{
													"key": "upload-id"
												},
												{
													"key": "file-id"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/uploads/:upload-id/files/:file-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"uploads",
												":upload-id",
												"files",
												":file-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												},
												{
													"key": "upload-id"
												},
												{
													"key": "file-id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/uploads/:upload-id/files/:file-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"uploads",
												":upload-id",
												"files",
												":file-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												},
												{
													"key": "upload-id"
												},
												{
													"key": "file-id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Forbidden, status code 13002",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/uploads/:upload-id/files/:file-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"uploads",
												":upload-id",
												"files",
												":file-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												},
												{
													"key": "upload-id"
												},
												{
													"key": "file-id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized, status code 13000 or 13001",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/chats/:chat-id/uploads/:upload-id/files/:file-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"chats",
												":chat-id",
												"uploads",
												":upload-id",
												"files",
												":file-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "chat-id"
												},
												{
													"key": "upload-id"
												},
												{
													"key": "file-id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get all conversations details",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/chats",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"chats"
							],
							"query": [
								{
									"key": "after",
									"value": "<string>",
									"description": "Messages posted or updated after this date. This parameter is optional but if you provide 'after' you must also provide 'before'. When neither 'after' nor 'before' are provided the default date range is 'the last 24 hours'. When both 'after' and 'before' are provided, the maximum acceptable date range is 90 days.",
									"disabled": true
								},
								{
									"key": "before",
									"value": "<string>",
									"description": "Messages posted or updated before this date. This parameter is optional but if you provide 'before' you must also provide 'after'. When neither 'after' nor 'before' are provided the default date range is 'the last 24 hours'. When both 'after' and 'before' are provided, the maximum acceptable date range is 90 days.",
									"disabled": true
								},
								{
									"key": "organization",
									"value": "<string>",
									"description": "Name of the organization that the conversations are a part of",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for item pagination. See 'cursor' field from previous response.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of items per page.",
									"disabled": true
								},
								{
									"key": "participants",
									"value": "<string>",
									"description": "List of participants, comma separated with no spaces",
									"disabled": true
								}
							]
						},
						"description": "Get all conversation details of your organization. This returns the details about the participants in the conversation but not the contents of the conversation."
					},
					"response": [
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/chats?after=<string>&before=<string>&organization=<string>&cursor=<string>&limit=100&participants=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"chats"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "participants",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/chats?after=<string>&before=<string>&organization=<string>&cursor=<string>&limit=100&participants=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"chats"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "participants",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"id\": \"JFX6MUfoGDCBrjVthvMQntayYcY=\",\n   \"kind\": \"GROUP\",\n   \"deactivated\": false,\n   \"creator\": {\n    \"userId\": 78524791,\n    \"phoneNumber\": \"+18005551111\",\n    \"extension\": \"*123\",\n    \"partial\": \"654789213\",\n    \"jid\": \"1234567890\",\n    \"application\": \"chat\",\n    \"type\": \"partial\"\n   },\n   \"createdAt\": \"2017-11-06T21:47:21.897Z\",\n   \"lastActiveAt\": \"2020-09-03T14:17:06.689Z\",\n   \"participants\": [\n    {\n     \"userId\": 65227913,\n     \"phoneNumber\": \"+18005551111\",\n     \"extension\": \"*123\",\n     \"partial\": \"654789213\",\n     \"jid\": \"1234567890\",\n     \"application\": \"chat\",\n     \"type\": \"user\"\n    },\n    {\n     \"userId\": -35725530,\n     \"phoneNumber\": \"+18005551111\",\n     \"extension\": \"*123\",\n     \"partial\": \"654789213\",\n     \"jid\": \"1234567890\",\n     \"application\": \"chat\",\n     \"type\": \"application\"\n    }\n   ],\n   \"name\": \"Herman, John and Lucy's awesome chat\"\n  },\n  {\n   \"id\": \"JFX6MUfoGDCBrjVthvMQntayYcY=\",\n   \"kind\": \"ONE_ON_ONE\",\n   \"deactivated\": false,\n   \"creator\": {\n    \"userId\": 43513098,\n    \"phoneNumber\": \"+18005551111\",\n    \"extension\": \"*123\",\n    \"partial\": \"654789213\",\n    \"jid\": \"1234567890\",\n    \"application\": \"chat\",\n    \"type\": \"jid\"\n   },\n   \"createdAt\": \"2017-11-06T21:47:21.897Z\",\n   \"lastActiveAt\": \"2020-09-03T14:17:06.689Z\",\n   \"participants\": [\n    {\n     \"userId\": 81733322,\n     \"phoneNumber\": \"+18005551111\",\n     \"extension\": \"*123\",\n     \"partial\": \"654789213\",\n     \"jid\": \"1234567890\",\n     \"application\": \"chat\",\n     \"type\": \"phone\"\n    },\n    {\n     \"userId\": -73029676,\n     \"phoneNumber\": \"+18005551111\",\n     \"extension\": \"*123\",\n     \"partial\": \"654789213\",\n     \"jid\": \"1234567890\",\n     \"application\": \"chat\",\n     \"type\": \"partial\"\n    }\n   ],\n   \"name\": \"Herman, John and Lucy's awesome chat\"\n  }\n ],\n \"pagination\": {\n  \"cursor\": \"ullamco minim sunt adipisicing\",\n  \"limit\": -93360678\n },\n \"status\": 87142013,\n \"msg\": \"sint enim\"\n}"
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/chats?after=<string>&before=<string>&organization=<string>&cursor=<string>&limit=100&participants=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"chats"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "participants",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/chats?after=<string>&before=<string>&organization=<string>&cursor=<string>&limit=100&participants=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"chats"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "participants",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/chats?after=<string>&before=<string>&organization=<string>&cursor=<string>&limit=100&participants=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"chats"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "participants",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/chats?after=<string>&before=<string>&organization=<string>&cursor=<string>&limit=100&participants=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"chats"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "participants",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get chat messages",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/chat-messages",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"chat-messages"
							],
							"query": [
								{
									"key": "kind",
									"value": "<string>",
									"description": "Message kinds, comma separated, without spaces (limited to message and upload).",
									"disabled": true
								},
								{
									"key": "sender",
									"value": "<string>",
									"description": "Sender of the message",
									"disabled": true
								},
								{
									"key": "after",
									"value": "<string>",
									"description": "Messages posted or updated after this date. This parameter is optional but if you provide 'after' you must also provide 'before'. When neither 'after' nor 'before' are provided the default date range is 'the last 24 hours'. When both 'after' and 'before' are provided, the maximum acceptable date range is 90 days.",
									"disabled": true
								},
								{
									"key": "before",
									"value": "<string>",
									"description": "Messages posted or updated before this date. This parameter is optional but if you provide 'before' you must also provide 'after'. When neither 'after' nor 'before' are provided the default date range is 'the last 24 hours'. When both 'after' and 'before' are provided, the maximum acceptable date range is 90 days.",
									"disabled": true
								},
								{
									"key": "organization",
									"value": "<string>",
									"description": "Name of the organization that the messages are a part of",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for item pagination. See 'cursor' field from previous response.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of items per page.",
									"disabled": true
								}
							]
						},
						"description": "Get a list of chat messages by kind, sender or date range."
					},
					"response": [
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/chat-messages?kind=<string>&sender=<string>&after=<string>&before=<string>&organization=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"chat-messages"
									],
									"query": [
										{
											"key": "kind",
											"value": "<string>"
										},
										{
											"key": "sender",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found, status code 13004",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/chat-messages?kind=<string>&sender=<string>&after=<string>&before=<string>&organization=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"chat-messages"
									],
									"query": [
										{
											"key": "kind",
											"value": "<string>"
										},
										{
											"key": "sender",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/chat-messages?kind=<string>&sender=<string>&after=<string>&before=<string>&organization=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"chat-messages"
									],
									"query": [
										{
											"key": "kind",
											"value": "<string>"
										},
										{
											"key": "sender",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"id\": \"-MDtdifosKW1OKC1cBY\",\n   \"kind\": \"invite\",\n   \"postedAt\": \"2020-08-04T13:26:30.900Z\",\n   \"updatedAt\": \"2020-08-04T13:26:30.900Z\",\n   \"editedAt\": \"2020-08-04T13:26:30.900Z\",\n   \"expiresAt\": \"2020-08-04T13:26:30.900Z\",\n   \"deleted\": false,\n   \"deletedAt\": \"2020-08-04T13:26:30.900Z\",\n   \"author\": {\n    \"userId\": -2890016,\n    \"phoneNumber\": \"+18005551111\",\n    \"extension\": \"*123\",\n    \"partial\": \"654789213\",\n    \"jid\": \"1234567890\",\n    \"application\": \"chat\",\n    \"type\": \"phone\"\n   },\n   \"chatId\": \"Yp3jjPRwFJHX40s8xAnhvilAefY=\",\n   \"content\": \"Lorem ipsum dolor...\",\n   \"previousContents\": [\n    {\n     \"content\": \"some text message\",\n     \"postedAt\": \"2020-09-11T12:03:09.468Z\"\n    },\n    {\n     \"content\": \"some text message\",\n     \"postedAt\": \"2020-09-11T12:03:09.468Z\"\n    }\n   ],\n   \"files\": [\n    {\n     \"fileId\": 32166362,\n     \"name\": \"20200911_133026.jpg\",\n     \"size\": -21288181,\n     \"ext\": \"jpg\",\n     \"url\": \"https://developer.fuze.com/api/v1/chats/CHATID/uploads/UPLOADID/files/FILEID\"\n    },\n    {\n     \"fileId\": 40795739,\n     \"name\": \"20200911_133026.jpg\",\n     \"size\": -35965438,\n     \"ext\": \"jpg\",\n     \"url\": \"https://developer.fuze.com/api/v1/chats/CHATID/uploads/UPLOADID/files/FILEID\"\n    }\n   ],\n   \"call\": {\n    \"id\": \"ukp-z19-call5-1599823330.1041172\",\n    \"from\": {\n     \"entity\": {\n      \"userId\": -30045708,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"application\"\n     },\n     \"name\": \"John\",\n     \"number\": \"+18005551023\"\n    },\n    \"to\": {\n     \"entity\": {\n      \"userId\": 76976865,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"application\"\n     },\n     \"name\": \"John\",\n     \"number\": \"+18005551023\"\n    },\n    \"direction\": \"INCOMING\",\n    \"dialedNumber\": \"8005554455\"\n   },\n   \"invite\": {\n    \"entities\": [\n     {\n      \"userId\": 92273670,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"user\"\n     },\n     {\n      \"userId\": -38151201,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"ext\"\n     }\n    ],\n    \"redeemed\": false\n   },\n   \"pending\": {\n    \"names\": [\n     \"dolo\",\n     \"nostrud aute non sit\"\n    ]\n   },\n   \"kick\": {\n    \"entities\": [\n     {\n      \"userId\": -85138434,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"application\"\n     },\n     {\n      \"userId\": 17562698,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"application\"\n     }\n    ]\n   },\n   \"rename\": {\n    \"name\": \"New awesome chat name\",\n    \"previousName\": \"The original chat name\"\n   },\n   \"deactivation\": [\n    {\n     \"reason\": \"INVITER_REQUEST\",\n     \"requester\": {\n      \"userId\": -14481221,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"partial\"\n     },\n     \"entityIds\": [\n      {\n       \"userId\": -96433486,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"partial\"\n      },\n      {\n       \"userId\": 81204208,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"jid\"\n      }\n     ]\n    },\n    {\n     \"reason\": \"ADMIN_REQUEST\",\n     \"requester\": {\n      \"userId\": -16314938,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"ext\"\n     },\n     \"entityIds\": [\n      {\n       \"userId\": -10709031,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"jid\"\n      },\n      {\n       \"userId\": 27872582,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"jid\"\n      }\n     ]\n    }\n   ],\n   \"meeting\": {\n    \"instanceId\": 4106229,\n    \"meetingId\": 99058188,\n    \"title\": \"My awesome meeting\",\n    \"creationTime\": \"2020-08-04T13:29:21Z\",\n    \"startTime\": \"2020-08-04T13:29:21Z\",\n    \"endTime\": \"2020-08-04T13:29:21Z\",\n    \"starter\": {\n     \"userId\": -68671696,\n     \"phoneNumber\": \"+18005551111\",\n     \"extension\": \"*123\",\n     \"partial\": \"654789213\",\n     \"jid\": \"1234567890\",\n     \"application\": \"chat\",\n     \"type\": \"jid\"\n    },\n    \"participants\": [\n     {\n      \"userId\": 1706108,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"phone\"\n     },\n     {\n      \"userId\": -45340078,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"user\"\n     }\n    ]\n   },\n   \"attachments\": [\n    {\n     \"id\": \"615487\",\n     \"fileName\": \"filename.jpg\",\n     \"fileSize\": 83044452,\n     \"fileType\": \"jpg\",\n     \"canDownload\": false,\n     \"previewUrl\": \"https://some.host.com/path/to/preview\",\n     \"fileOrigin\": \"?\",\n     \"favIcon\": \"https://...\",\n     \"description\": \"Here's the sample file you requested\",\n     \"url\": \"https://...\",\n     \"previewAvailable\": false\n    },\n    {\n     \"id\": \"615487\",\n     \"fileName\": \"filename.jpg\",\n     \"fileSize\": 23028680,\n     \"fileType\": \"jpg\",\n     \"canDownload\": false,\n     \"previewUrl\": \"https://some.host.com/path/to/preview\",\n     \"fileOrigin\": \"?\",\n     \"favIcon\": \"https://...\",\n     \"description\": \"Here's the sample file you requested\",\n     \"url\": \"https://...\",\n     \"previewAvailable\": false\n    }\n   ],\n   \"reactions\": [\n    {\n     \"reaction\": \"😄\",\n     \"entities\": [\n      {\n       \"userId\": 44138329,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"partial\"\n      },\n      {\n       \"userId\": 32748148,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"application\"\n      }\n     ]\n    },\n    {\n     \"reaction\": \"😄\",\n     \"entities\": [\n      {\n       \"userId\": -38359958,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"jid\"\n      },\n      {\n       \"userId\": -64874543,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"application\"\n      }\n     ]\n    }\n   ],\n   \"error\": \"undelivered\"\n  },\n  {\n   \"id\": \"-MDtdifosKW1OKC1cBY\",\n   \"kind\": \"invite\",\n   \"postedAt\": \"2020-08-04T13:26:30.900Z\",\n   \"updatedAt\": \"2020-08-04T13:26:30.900Z\",\n   \"editedAt\": \"2020-08-04T13:26:30.900Z\",\n   \"expiresAt\": \"2020-08-04T13:26:30.900Z\",\n   \"deleted\": false,\n   \"deletedAt\": \"2020-08-04T13:26:30.900Z\",\n   \"author\": {\n    \"userId\": -98086435,\n    \"phoneNumber\": \"+18005551111\",\n    \"extension\": \"*123\",\n    \"partial\": \"654789213\",\n    \"jid\": \"1234567890\",\n    \"application\": \"chat\",\n    \"type\": \"jid\"\n   },\n   \"chatId\": \"Yp3jjPRwFJHX40s8xAnhvilAefY=\",\n   \"content\": \"Lorem ipsum dolor...\",\n   \"previousContents\": [\n    {\n     \"content\": \"some text message\",\n     \"postedAt\": \"2020-09-11T12:03:09.468Z\"\n    },\n    {\n     \"content\": \"some text message\",\n     \"postedAt\": \"2020-09-11T12:03:09.468Z\"\n    }\n   ],\n   \"files\": [\n    {\n     \"fileId\": 36200736,\n     \"name\": \"20200911_133026.jpg\",\n     \"size\": 31222775,\n     \"ext\": \"jpg\",\n     \"url\": \"https://developer.fuze.com/api/v1/chats/CHATID/uploads/UPLOADID/files/FILEID\"\n    },\n    {\n     \"fileId\": 47275908,\n     \"name\": \"20200911_133026.jpg\",\n     \"size\": 46225273,\n     \"ext\": \"jpg\",\n     \"url\": \"https://developer.fuze.com/api/v1/chats/CHATID/uploads/UPLOADID/files/FILEID\"\n    }\n   ],\n   \"call\": {\n    \"id\": \"ukp-z19-call5-1599823330.1041172\",\n    \"from\": {\n     \"entity\": {\n      \"userId\": 22695174,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"jid\"\n     },\n     \"name\": \"John\",\n     \"number\": \"+18005551023\"\n    },\n    \"to\": {\n     \"entity\": {\n      \"userId\": 77530272,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"partial\"\n     },\n     \"name\": \"John\",\n     \"number\": \"+18005551023\"\n    },\n    \"direction\": \"OUTGOING\",\n    \"dialedNumber\": \"8005554455\"\n   },\n   \"invite\": {\n    \"entities\": [\n     {\n      \"userId\": -33531435,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"user\"\n     },\n     {\n      \"userId\": 35544149,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"jid\"\n     }\n    ],\n    \"redeemed\": false\n   },\n   \"pending\": {\n    \"names\": [\n     \"laboris\",\n     \"in ut\"\n    ]\n   },\n   \"kick\": {\n    \"entities\": [\n     {\n      \"userId\": -55243602,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"ext\"\n     },\n     {\n      \"userId\": -3575333,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"phone\"\n     }\n    ]\n   },\n   \"rename\": {\n    \"name\": \"New awesome chat name\",\n    \"previousName\": \"The original chat name\"\n   },\n   \"deactivation\": [\n    {\n     \"reason\": \"ADMIN_REQUEST\",\n     \"requester\": {\n      \"userId\": 69033985,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"jid\"\n     },\n     \"entityIds\": [\n      {\n       \"userId\": -20340956,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"partial\"\n      },\n      {\n       \"userId\": 92472272,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"partial\"\n      }\n     ]\n    },\n    {\n     \"reason\": \"ADMIN_REQUEST\",\n     \"requester\": {\n      \"userId\": 31107465,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"partial\"\n     },\n     \"entityIds\": [\n      {\n       \"userId\": -52248027,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"phone\"\n      },\n      {\n       \"userId\": -52988634,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"ext\"\n      }\n     ]\n    }\n   ],\n   \"meeting\": {\n    \"instanceId\": 18013708,\n    \"meetingId\": 89491247,\n    \"title\": \"My awesome meeting\",\n    \"creationTime\": \"2020-08-04T13:29:21Z\",\n    \"startTime\": \"2020-08-04T13:29:21Z\",\n    \"endTime\": \"2020-08-04T13:29:21Z\",\n    \"starter\": {\n     \"userId\": 57328335,\n     \"phoneNumber\": \"+18005551111\",\n     \"extension\": \"*123\",\n     \"partial\": \"654789213\",\n     \"jid\": \"1234567890\",\n     \"application\": \"chat\",\n     \"type\": \"phone\"\n    },\n    \"participants\": [\n     {\n      \"userId\": 47908867,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"ext\"\n     },\n     {\n      \"userId\": -90886191,\n      \"phoneNumber\": \"+18005551111\",\n      \"extension\": \"*123\",\n      \"partial\": \"654789213\",\n      \"jid\": \"1234567890\",\n      \"application\": \"chat\",\n      \"type\": \"partial\"\n     }\n    ]\n   },\n   \"attachments\": [\n    {\n     \"id\": \"615487\",\n     \"fileName\": \"filename.jpg\",\n     \"fileSize\": 23742081,\n     \"fileType\": \"jpg\",\n     \"canDownload\": false,\n     \"previewUrl\": \"https://some.host.com/path/to/preview\",\n     \"fileOrigin\": \"?\",\n     \"favIcon\": \"https://...\",\n     \"description\": \"Here's the sample file you requested\",\n     \"url\": \"https://...\",\n     \"previewAvailable\": false\n    },\n    {\n     \"id\": \"615487\",\n     \"fileName\": \"filename.jpg\",\n     \"fileSize\": -70265870,\n     \"fileType\": \"jpg\",\n     \"canDownload\": false,\n     \"previewUrl\": \"https://some.host.com/path/to/preview\",\n     \"fileOrigin\": \"?\",\n     \"favIcon\": \"https://...\",\n     \"description\": \"Here's the sample file you requested\",\n     \"url\": \"https://...\",\n     \"previewAvailable\": false\n    }\n   ],\n   \"reactions\": [\n    {\n     \"reaction\": \"😄\",\n     \"entities\": [\n      {\n       \"userId\": -24407226,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"ext\"\n      },\n      {\n       \"userId\": 77388847,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"partial\"\n      }\n     ]\n    },\n    {\n     \"reaction\": \"😄\",\n     \"entities\": [\n      {\n       \"userId\": -65597259,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"user\"\n      },\n      {\n       \"userId\": 26785957,\n       \"phoneNumber\": \"+18005551111\",\n       \"extension\": \"*123\",\n       \"partial\": \"654789213\",\n       \"jid\": \"1234567890\",\n       \"application\": \"chat\",\n       \"type\": \"phone\"\n      }\n     ]\n    }\n   ],\n   \"error\": \"undelivered\"\n  }\n ],\n \"pagination\": {\n  \"cursor\": \"amet in eu mollit Lorem\",\n  \"limit\": 31375803\n },\n \"status\": -72426518,\n \"msg\": \"enim aliquip cupidatat\"\n}"
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/chat-messages?kind=<string>&sender=<string>&after=<string>&before=<string>&organization=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"chat-messages"
									],
									"query": [
										{
											"key": "kind",
											"value": "<string>"
										},
										{
											"key": "sender",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/chat-messages?kind=<string>&sender=<string>&after=<string>&before=<string>&organization=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"chat-messages"
									],
									"query": [
										{
											"key": "kind",
											"value": "<string>"
										},
										{
											"key": "sender",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/chat-messages?kind=<string>&sender=<string>&after=<string>&before=<string>&organization=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"chat-messages"
									],
									"query": [
										{
											"key": "kind",
											"value": "<string>"
										},
										{
											"key": "sender",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/chat-messages?kind=<string>&sender=<string>&after=<string>&before=<string>&organization=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"chat-messages"
									],
									"query": [
										{
											"key": "kind",
											"value": "<string>"
										},
										{
											"key": "sender",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "departments",
			"item": [
				{
					"name": "Get all departments",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/departments",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"departments"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for item pagination. See 'cursor' field from previous response.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of items per page.",
									"disabled": true
								}
							]
						},
						"description": "Returns a list of all departments in your organization."
					},
					"response": [
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/departments?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/departments?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/departments?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/departments?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"departmentId\": -50357519,\n   \"name\": \"velit amet\",\n   \"description\": \"tempor ullamco magna pariatur\",\n   \"active\": false,\n   \"createdOn\": \"2020-01-05T14:21:38+01:00\",\n   \"lastModifiedOn\": \"2020-01-05T14:21:38+01:00\",\n   \"organizationCode\": \"fuze\",\n   \"defaultDepartment\": false\n  },\n  {\n   \"departmentId\": -57556508,\n   \"name\": \"ex cupid\",\n   \"description\": \"ad id\",\n   \"active\": false,\n   \"createdOn\": \"2020-01-05T14:21:38+01:00\",\n   \"lastModifiedOn\": \"2020-01-05T14:21:38+01:00\",\n   \"organizationCode\": \"fuze\",\n   \"defaultDepartment\": false\n  }\n ],\n \"pagination\": {\n  \"cursor\": \"veniam sit\",\n  \"limit\": -18571461\n },\n \"status\": 1676559,\n \"msg\": \"do ullamc\"\n}"
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/departments?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/departments?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get one department",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/departments/:department-id",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"departments",
								":department-id"
							],
							"variable": [
								{
									"key": "department-id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Department identifier."
								}
							]
						},
						"description": "Get the details of the specified department."
					},
					"response": [
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/departments/:department-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments",
										":department-id"
									],
									"variable": [
										{
											"key": "department-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/departments/:department-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments",
										":department-id"
									],
									"variable": [
										{
											"key": "department-id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/departments/:department-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments",
										":department-id"
									],
									"variable": [
										{
											"key": "department-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/departments/:department-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments",
										":department-id"
									],
									"variable": [
										{
											"key": "department-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/departments/:department-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments",
										":department-id"
									],
									"variable": [
										{
											"key": "department-id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/departments/:department-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments",
										":department-id"
									],
									"variable": [
										{
											"key": "department-id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"departmentId\": -12711390,\n  \"name\": \"ullamco dolor officia\",\n  \"description\": \"mollit esse proident\",\n  \"active\": false,\n  \"createdOn\": \"2020-01-05T14:21:38+01:00\",\n  \"lastModifiedOn\": \"2020-01-05T14:21:38+01:00\",\n  \"organizationCode\": \"fuze\",\n  \"defaultDepartment\": false\n },\n \"status\": 90830749,\n \"msg\": \"ut Duis deserunt\"\n}"
						},
						{
							"name": "Not found, status code 13004",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/departments/:department-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments",
										":department-id"
									],
									"variable": [
										{
											"key": "department-id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "locations",
			"item": [
				{
					"name": "Get all locations",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/locations",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"locations"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for item pagination. See 'cursor' field from previous response.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of items per page.",
									"disabled": true
								}
							]
						},
						"description": "List all the locations within your organization."
					},
					"response": [
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"locationId\": 57636872,\n   \"name\": \"exercitation fugiat voluptate\",\n   \"locationCode\": \"culpa nulla\",\n   \"organizationCode\": \"consequat anim Lorem sunt veniam\",\n   \"timeZone\": \"US/Eastern\",\n   \"createdOn\": \"2008-06-03T16:18:19-04:00\",\n   \"lastModifiedOn\": \"2020-06-22T15:47:24-04:00\",\n   \"active\": false,\n   \"addressLine1\": \"tempor elit anim\",\n   \"addressLine2\": \"aute nisi exercitation\",\n   \"city\": \"dolor\",\n   \"state\": \"veniam do ipsum eiusmod velit\",\n   \"postalCode\": \"elit eiusmod\",\n   \"countryCode\": \"US\"\n  },\n  {\n   \"locationId\": -175514,\n   \"name\": \"Lorem\",\n   \"locationCode\": \"in labo\",\n   \"organizationCode\": \"minim esse consequat occaecat in\",\n   \"timeZone\": \"US/Eastern\",\n   \"createdOn\": \"2008-06-03T16:18:19-04:00\",\n   \"lastModifiedOn\": \"2020-06-22T15:47:24-04:00\",\n   \"active\": false,\n   \"addressLine1\": \"irure labori\",\n   \"addressLine2\": \"ipsum velit\",\n   \"city\": \"Excepteur\",\n   \"state\": \"est aliquip commodo dolore voluptate\",\n   \"postalCode\": \"incididunt velit in\",\n   \"countryCode\": \"US\"\n  }\n ],\n \"pagination\": {\n  \"cursor\": \"Lorem ipsum in\",\n  \"limit\": 85623816\n },\n \"status\": 23193713,\n \"msg\": \"ex esse minim occaecat\"\n}"
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get one location",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/locations/:location-id",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"locations",
								":location-id"
							],
							"variable": [
								{
									"key": "location-id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Location identifier."
								}
							]
						},
						"description": "Get details of the specified location."
					},
					"response": [
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations/:location-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations",
										":location-id"
									],
									"variable": [
										{
											"key": "location-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations/:location-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations",
										":location-id"
									],
									"variable": [
										{
											"key": "location-id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"locationId\": 89563066,\n  \"name\": \"ea\",\n  \"locationCode\": \"ullamco\",\n  \"organizationCode\": \"sed ipsum reprehenderit\",\n  \"timeZone\": \"US/Eastern\",\n  \"createdOn\": \"2008-06-03T16:18:19-04:00\",\n  \"lastModifiedOn\": \"2020-06-22T15:47:24-04:00\",\n  \"active\": false,\n  \"addressLine1\": \"nulla adipisicing cupidatat\",\n  \"addressLine2\": \"consequat mollit voluptate\",\n  \"city\": \"in sint et\",\n  \"state\": \"et ipsum incididunt veniam\",\n  \"postalCode\": \"labore veniam\",\n  \"countryCode\": \"US\"\n },\n \"status\": 49401396,\n \"msg\": \"minim aliqua\"\n}"
						},
						{
							"name": "Not found, status code 13004",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations/:location-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations",
										":location-id"
									],
									"variable": [
										{
											"key": "location-id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations/:location-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations",
										":location-id"
									],
									"variable": [
										{
											"key": "location-id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations/:location-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations",
										":location-id"
									],
									"variable": [
										{
											"key": "location-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations/:location-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations",
										":location-id"
									],
									"variable": [
										{
											"key": "location-id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations/:location-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations",
										":location-id"
									],
									"variable": [
										{
											"key": "location-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "meetings",
			"item": [
				{
					"name": "Get all meetings",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/meetings",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"meetings"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for item pagination. See 'cursor' field from previous response.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of items per page.",
									"disabled": true
								},
								{
									"key": "organization",
									"value": "<string>",
									"description": "Name of the organization that the meeting is a part of",
									"disabled": true
								}
							]
						},
						"description": "Returns a list of all meetings within your organization."
					},
					"response": [
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings?cursor=<string>&limit=100&organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "organization",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings?cursor=<string>&limit=100&organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "organization",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings?cursor=<string>&limit=100&organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "organization",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings?cursor=<string>&limit=100&organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "organization",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"id\": \"37409119\",\n   \"host\": 90772901,\n   \"subject\": \"My Fuze Meeting\",\n   \"version\": \"1\",\n   \"startTime\": \"2020-06-30T12:30:00+01:00\",\n   \"endTime\": \"2020-06-30T13:00:00+01:00\",\n   \"enableChimes\": false,\n   \"muteOnEntry\": false,\n   \"autoAccept\": true,\n   \"autoRecord\": false,\n   \"displayTollFree\": false,\n   \"accessUrl\": \"https://fuze.me/1234567890\"\n  },\n  {\n   \"id\": \"37409119\",\n   \"host\": -29063052,\n   \"subject\": \"My Fuze Meeting\",\n   \"version\": \"1\",\n   \"startTime\": \"2020-06-30T12:30:00+01:00\",\n   \"endTime\": \"2020-06-30T13:00:00+01:00\",\n   \"enableChimes\": false,\n   \"muteOnEntry\": false,\n   \"autoAccept\": true,\n   \"autoRecord\": false,\n   \"displayTollFree\": false,\n   \"accessUrl\": \"https://fuze.me/1234567890\"\n  }\n ],\n \"pagination\": {\n  \"cursor\": \"in adipisicing\",\n  \"limit\": -20835786\n },\n \"status\": -58652807,\n \"msg\": \"sit adipisicing\"\n}"
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings?cursor=<string>&limit=100&organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "organization",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings?cursor=<string>&limit=100&organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "organization",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a meeting",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"host\": \"<long>\",\n    \"startTime\": \"<dateTime>\",\n    \"subject\": \"<string>\",\n    \"enableChimes\": false,\n    \"muteOnEntry\": false,\n    \"autoAccept\": true,\n    \"autoRecord\": false\n}"
						},
						"url": {
							"raw": "https://developer.fuze.com/api/v1/meetings",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"meetings"
							],
							"query": [
								{
									"key": "organization",
									"value": "<string>",
									"description": "Name of the organization that the meeting is a part of",
									"disabled": true
								}
							]
						},
						"description": "This endpoint will create a meeting for attendees to join."
					},
					"response": [
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"endTime\": \"2020-06-29T16:59:59+00:00\",\n    \"host\": \"<long>\",\n    \"startTime\": \"2020-06-29T16:45:00+00:00\",\n    \"subject\": \"My Fuze Meeting\",\n    \"enableChimes\": false,\n    \"muteOnEntry\": false,\n    \"autoAccept\": true,\n    \"autoRecord\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/meetings?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"id\": \"37409119\",\n  \"host\": -46079741,\n  \"subject\": \"My Fuze Meeting\",\n  \"version\": \"1\",\n  \"startTime\": \"2020-06-30T12:30:00+01:00\",\n  \"endTime\": \"2020-06-30T13:00:00+01:00\",\n  \"enableChimes\": false,\n  \"muteOnEntry\": false,\n  \"autoAccept\": true,\n  \"autoRecord\": false,\n  \"displayTollFree\": false,\n  \"accessUrl\": \"https://fuze.me/1234567890\"\n },\n \"status\": -70090890,\n \"msg\": \"ipsum nisi eu officia dolor\"\n}"
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"endTime\": \"2020-06-29T16:59:59+00:00\",\n    \"host\": \"<long>\",\n    \"startTime\": \"2020-06-29T16:45:00+00:00\",\n    \"subject\": \"My Fuze Meeting\",\n    \"enableChimes\": false,\n    \"muteOnEntry\": false,\n    \"autoAccept\": true,\n    \"autoRecord\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/meetings?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"endTime\": \"2020-06-29T16:59:59+00:00\",\n    \"host\": \"<long>\",\n    \"startTime\": \"2020-06-29T16:45:00+00:00\",\n    \"subject\": \"My Fuze Meeting\",\n    \"enableChimes\": false,\n    \"muteOnEntry\": false,\n    \"autoAccept\": true,\n    \"autoRecord\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/meetings?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"endTime\": \"2020-06-29T16:59:59+00:00\",\n    \"host\": \"<long>\",\n    \"startTime\": \"2020-06-29T16:45:00+00:00\",\n    \"subject\": \"My Fuze Meeting\",\n    \"enableChimes\": false,\n    \"muteOnEntry\": false,\n    \"autoAccept\": true,\n    \"autoRecord\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/meetings?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"endTime\": \"2020-06-29T16:59:59+00:00\",\n    \"host\": \"<long>\",\n    \"startTime\": \"2020-06-29T16:45:00+00:00\",\n    \"subject\": \"My Fuze Meeting\",\n    \"enableChimes\": false,\n    \"muteOnEntry\": false,\n    \"autoAccept\": true,\n    \"autoRecord\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/meetings?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"endTime\": \"2020-06-29T16:59:59+00:00\",\n    \"host\": \"<long>\",\n    \"startTime\": \"2020-06-29T16:45:00+00:00\",\n    \"subject\": \"My Fuze Meeting\",\n    \"enableChimes\": false,\n    \"muteOnEntry\": false,\n    \"autoAccept\": true,\n    \"autoRecord\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/meetings?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get one meeting by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/meetings/:meeting-id",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"meetings",
								":meeting-id"
							],
							"query": [
								{
									"key": "organization",
									"value": "<string>",
									"description": "Name of the organization that the meeting is a part of",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "meeting-id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Meeting identifier"
								}
							]
						},
						"description": "Get the details of one meeting."
					},
					"response": [
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"id\": \"37409119\",\n  \"host\": -46079741,\n  \"subject\": \"My Fuze Meeting\",\n  \"version\": \"1\",\n  \"startTime\": \"2020-06-30T12:30:00+01:00\",\n  \"endTime\": \"2020-06-30T13:00:00+01:00\",\n  \"enableChimes\": false,\n  \"muteOnEntry\": false,\n  \"autoAccept\": true,\n  \"autoRecord\": false,\n  \"displayTollFree\": false,\n  \"accessUrl\": \"https://fuze.me/1234567890\"\n },\n \"status\": -70090890,\n \"msg\": \"ipsum nisi eu officia dolor\"\n}"
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found, status code 13004",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete one meeting by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/meetings/:meeting-id",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"meetings",
								":meeting-id"
							],
							"query": [
								{
									"key": "organization",
									"value": "<string>",
									"description": "Name of the organization that the meeting is a part of",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "meeting-id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Meeting identifier."
								}
							]
						},
						"description": "Deletes the specified meeting."
					},
					"response": [
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"id\": \"37409119\",\n  \"host\": -46079741,\n  \"subject\": \"My Fuze Meeting\",\n  \"version\": \"1\",\n  \"startTime\": \"2020-06-30T12:30:00+01:00\",\n  \"endTime\": \"2020-06-30T13:00:00+01:00\",\n  \"enableChimes\": false,\n  \"muteOnEntry\": false,\n  \"autoAccept\": true,\n  \"autoRecord\": false,\n  \"displayTollFree\": false,\n  \"accessUrl\": \"https://fuze.me/1234567890\"\n },\n \"status\": -70090890,\n \"msg\": \"ipsum nisi eu officia dolor\"\n}"
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found, status code 13004",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "meetings-recordings",
			"item": [
				{
					"name": "Get all meeting recordings",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/meetings-recordings",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"meetings-recordings"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for item pagination. See 'cursor' field from previous response.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of items per page.",
									"disabled": true
								}
							]
						},
						"description": "Returns all of the meeting recordings within the organization."
					},
					"response": [
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings-recordings?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings-recordings"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"recordingId\": \"sed occaecat pariatur dolore\",\n   \"meetingId\": \"dolor do elit proident non\",\n   \"recordedDate\": \"1944-10-23T23:12:51.243Z\",\n   \"duration\": -33753509\n  },\n  {\n   \"recordingId\": \"ali\",\n   \"meetingId\": \"in\",\n   \"recordedDate\": \"1975-06-08T21:58:28.111Z\",\n   \"duration\": -43961943\n  }\n ],\n \"pagination\": {\n  \"cursor\": \"ullamco amet labore velit\",\n  \"limit\": 43806749\n },\n \"status\": 5672821,\n \"msg\": \"enim non\"\n}"
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings-recordings?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings-recordings"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings-recordings?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings-recordings"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings-recordings?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings-recordings"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings-recordings?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings-recordings"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings-recordings?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings-recordings"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get one meeting recording",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/meetings-recordings/:recording-id",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"meetings-recordings",
								":recording-id"
							],
							"variable": [
								{
									"key": "recording-id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Recording identifier."
								}
							]
						},
						"description": "Returns the meeting recording for a meeting."
					},
					"response": [
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings-recordings/:recording-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings-recordings",
										":recording-id"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings-recordings/:recording-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings-recordings",
										":recording-id"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings-recordings/:recording-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings-recordings",
										":recording-id"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings-recordings/:recording-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings-recordings",
										":recording-id"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"recordingId\": \"aliquip exercitation\",\n  \"meetingId\": \"ut tempor\",\n  \"recordedDate\": \"1999-03-12T14:37:21.741Z\",\n  \"duration\": 2111825\n },\n \"status\": -47992122,\n \"msg\": \"aliqua cupidatat Ut\"\n}"
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings-recordings/:recording-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings-recordings",
										":recording-id"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found, status code 13004",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings-recordings/:recording-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings-recordings",
										":recording-id"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings-recordings/:recording-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings-recordings",
										":recording-id"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "organizations",
			"item": [
				{
					"name": "List all organizations",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/organizations",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"organizations"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for item pagination. See 'cursor' field from previous response.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of items per page.",
									"disabled": true
								}
							]
						},
						"description": "Return a list of organizations."
					},
					"response": [
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"id\": \"44\",\n   \"name\": \"in nulla voluptate\",\n   \"code\": \"fuze\",\n   \"active\": false,\n   \"createdOn\": \"2006-02-10T18:41:24Z\",\n   \"lastModifiedOn\": \"2020-05-28T10:15:33-04:00\"\n  },\n  {\n   \"id\": \"44\",\n   \"name\": \"dolore non ullamco esse elit\",\n   \"code\": \"fuze\",\n   \"active\": false,\n   \"createdOn\": \"2006-02-10T18:41:24Z\",\n   \"lastModifiedOn\": \"2020-05-28T10:15:33-04:00\"\n  }\n ],\n \"pagination\": {\n  \"cursor\": \"ex exercitation nisi aute aliquip\",\n  \"limit\": -85858589\n },\n \"status\": -78604330,\n \"msg\": \"sed\"\n}"
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get one organization details",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/organizations/:organization-code",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"organizations",
								":organization-code"
							],
							"variable": [
								{
									"key": "organization-code",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Organization code."
								}
							]
						},
						"description": "Return the details of one organization."
					},
					"response": [
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organization-code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organization-code"
									],
									"variable": [
										{
											"key": "organization-code"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organization-code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organization-code"
									],
									"variable": [
										{
											"key": "organization-code"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organization-code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organization-code"
									],
									"variable": [
										{
											"key": "organization-code"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organization-code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organization-code"
									],
									"variable": [
										{
											"key": "organization-code"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organization-code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organization-code"
									],
									"variable": [
										{
											"key": "organization-code"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organization-code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organization-code"
									],
									"variable": [
										{
											"key": "organization-code"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"id\": \"44\",\n  \"name\": \"do fugiat ullamco ut irure\",\n  \"code\": \"fuze\",\n  \"active\": false,\n  \"createdOn\": \"2006-02-10T18:41:24Z\",\n  \"lastModifiedOn\": \"2020-05-28T10:15:33-04:00\"\n },\n \"status\": 74494547,\n \"msg\": \"aliqu\"\n}"
						},
						{
							"name": "Not found, status code 13004",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organization-code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organization-code"
									],
									"variable": [
										{
											"key": "organization-code"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "List all users of your organization",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/users",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"users"
							],
							"query": [
								{
									"key": "email",
									"value": "<string>",
									"description": "Filter users by email.",
									"disabled": true
								},
								{
									"key": "userName",
									"value": "<string>",
									"description": "Filter users by their user name.",
									"disabled": true
								},
								{
									"key": "firstName",
									"value": "<string>",
									"description": "Filter users by their first name.",
									"disabled": true
								},
								{
									"key": "lastName",
									"value": "<string>",
									"description": "Filter users by their last name.",
									"disabled": true
								},
								{
									"key": "primaryPhoneNumber",
									"value": "<string>",
									"description": "Filter users by their phone number (in e.164 format).",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of items per page.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for item pagination. See 'cursor' field from previous response.",
									"disabled": true
								}
							]
						},
						"description": "Returns a list of all the users of your organization."
					},
					"response": [
						{
							"name": "Bad request, status code 13003 or 13008",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?email=<string>&userName=<string>&firstName=<string>&lastName=<string>&primaryPhoneNumber=<string>&limit=100&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "email",
											"value": "<string>"
										},
										{
											"key": "userName",
											"value": "<string>"
										},
										{
											"key": "firstName",
											"value": "<string>"
										},
										{
											"key": "lastName",
											"value": "<string>"
										},
										{
											"key": "primaryPhoneNumber",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?email=<string>&userName=<string>&firstName=<string>&lastName=<string>&primaryPhoneNumber=<string>&limit=100&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "email",
											"value": "<string>"
										},
										{
											"key": "userName",
											"value": "<string>"
										},
										{
											"key": "firstName",
											"value": "<string>"
										},
										{
											"key": "lastName",
											"value": "<string>"
										},
										{
											"key": "primaryPhoneNumber",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?email=<string>&userName=<string>&firstName=<string>&lastName=<string>&primaryPhoneNumber=<string>&limit=100&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "email",
											"value": "<string>"
										},
										{
											"key": "userName",
											"value": "<string>"
										},
										{
											"key": "firstName",
											"value": "<string>"
										},
										{
											"key": "lastName",
											"value": "<string>"
										},
										{
											"key": "primaryPhoneNumber",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?email=<string>&userName=<string>&firstName=<string>&lastName=<string>&primaryPhoneNumber=<string>&limit=100&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "email",
											"value": "<string>"
										},
										{
											"key": "userName",
											"value": "<string>"
										},
										{
											"key": "firstName",
											"value": "<string>"
										},
										{
											"key": "lastName",
											"value": "<string>"
										},
										{
											"key": "primaryPhoneNumber",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"userName\": \"et in consequat\",\n   \"email\": \"you@example.com\",\n   \"firstName\": \"tempor labore enim\",\n   \"lastName\": \"nulla mollit cupidatat\",\n   \"userId\": 61489531,\n   \"createdOn\": \"2018-02-02T14:58:11+01:00\",\n   \"lastModifiedOn\": \"2018-09-13T19:03:36+01:00\",\n   \"primaryPhoneNumber\": \"+12025522599\",\n   \"active\": false,\n   \"locationId\": 7755129,\n   \"departmentId\": 59880212,\n   \"organizationId\": -66226320,\n   \"organizationCode\": \"fuze\"\n  },\n  {\n   \"userName\": \"sunt id reprehenderit\",\n   \"email\": \"you@example.com\",\n   \"firstName\": \"consectetur \",\n   \"lastName\": \"ullamco nostrud\",\n   \"userId\": 24910979,\n   \"createdOn\": \"2018-02-02T14:58:11+01:00\",\n   \"lastModifiedOn\": \"2018-09-13T19:03:36+01:00\",\n   \"primaryPhoneNumber\": \"+12025522599\",\n   \"active\": false,\n   \"locationId\": -26917625,\n   \"departmentId\": -62236025,\n   \"organizationId\": 32377913,\n   \"organizationCode\": \"fuze\"\n  }\n ],\n \"pagination\": {\n  \"cursor\": \"sed in dolor\",\n  \"limit\": 93846664\n },\n \"status\": -42728453,\n \"msg\": \"exercitation eiusmod consequat aliq\"\n}"
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?email=<string>&userName=<string>&firstName=<string>&lastName=<string>&primaryPhoneNumber=<string>&limit=100&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "email",
											"value": "<string>"
										},
										{
											"key": "userName",
											"value": "<string>"
										},
										{
											"key": "firstName",
											"value": "<string>"
										},
										{
											"key": "lastName",
											"value": "<string>"
										},
										{
											"key": "primaryPhoneNumber",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?email=<string>&userName=<string>&firstName=<string>&lastName=<string>&primaryPhoneNumber=<string>&limit=100&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "email",
											"value": "<string>"
										},
										{
											"key": "userName",
											"value": "<string>"
										},
										{
											"key": "firstName",
											"value": "<string>"
										},
										{
											"key": "lastName",
											"value": "<string>"
										},
										{
											"key": "primaryPhoneNumber",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get details of one user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/users/:user-id",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"users",
								":user-id"
							],
							"variable": [
								{
									"key": "user-id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) User identifier."
								}
							]
						},
						"description": "Returns the details of one user. This user must be part of your organization."
					},
					"response": [
						{
							"name": "Not found, status code 13004",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"userName\": \"culpa anim ullamco dolor\",\n  \"email\": \"you@example.com\",\n  \"firstName\": \"qui tempor Excepteur\",\n  \"lastName\": \"qui aliqua exercitation\",\n  \"userId\": -53787742,\n  \"createdOn\": \"2018-02-02T14:58:11+01:00\",\n  \"lastModifiedOn\": \"2018-09-13T19:03:36+01:00\",\n  \"primaryPhoneNumber\": \"+12025522599\",\n  \"active\": false,\n  \"locationId\": -55704563,\n  \"departmentId\": 39037993,\n  \"organizationId\": -91644665,\n  \"organizationCode\": \"fuze\"\n },\n \"status\": -90455273,\n \"msg\": \"ipsum tempor occaecat\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "webhooks/presence",
			"item": [
				{
					"name": "subscriptions",
					"item": [
						{
							"name": "Get all presence subscriptions of a presence webhook",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{fuzeBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Fuze-Origin",
										"value": "Fuze Developer Center Postman Collection",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://developer.fuze.com/api/v1/webhooks/presence/:webhook-id/subscriptions",
									"protocol": "https",
									"host": [
										"developer",
										"fuze",
										"com"
									],
									"path": [
										"api",
										"v1",
										"webhooks",
										"presence",
										":webhook-id",
										"subscriptions"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>",
											"description": "Name of the organization that the webhook is a part of",
											"disabled": true
										},
										{
											"key": "includeExpiredSubscriptions",
											"value": "false",
											"description": "Set to true to see all subscriptions, including expired ones",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for item pagination. See 'cursor' field from previous response.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "100",
											"description": "Number of items per page.",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "webhook-id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Webhook identifier"
										}
									]
								},
								"description": "Returns a list of all presence subscriptions of a presence webhook."
							},
							"response": [
								{
									"name": "Forbidden, status code 13002",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions?organization=<string>&includeExpiredSubscriptions=false&cursor=<string>&limit=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												},
												{
													"key": "includeExpiredSubscriptions",
													"value": "false"
												},
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized, status code 13000 or 13001",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions?organization=<string>&includeExpiredSubscriptions=false&cursor=<string>&limit=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												},
												{
													"key": "includeExpiredSubscriptions",
													"value": "false"
												},
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad request, status code 13007",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions?organization=<string>&includeExpiredSubscriptions=false&cursor=<string>&limit=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												},
												{
													"key": "includeExpiredSubscriptions",
													"value": "false"
												},
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Ok, status code 0",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions?organization=<string>&includeExpiredSubscriptions=false&cursor=<string>&limit=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												},
												{
													"key": "includeExpiredSubscriptions",
													"value": "false"
												},
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"subscriptionId\": -17568633,\n   \"userId\": \"1234567890987654321\",\n   \"expires\": \"2021-08-31T23:50:55Z\"\n  },\n  {\n   \"subscriptionId\": -83819526,\n   \"userId\": \"1234567890987654321\",\n   \"expires\": \"2021-08-31T23:50:55Z\"\n  }\n ],\n \"pagination\": {\n  \"cursor\": \"est ad sit deserunt do\",\n  \"limit\": -58918910\n },\n \"status\": -85298689,\n \"msg\": \"do aliqua anim cupidatat\"\n}"
								},
								{
									"name": "Conflict, status code 13009",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions?organization=<string>&includeExpiredSubscriptions=false&cursor=<string>&limit=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												},
												{
													"key": "includeExpiredSubscriptions",
													"value": "false"
												},
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Too many requests, status code 13006",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions?organization=<string>&includeExpiredSubscriptions=false&cursor=<string>&limit=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												},
												{
													"key": "includeExpiredSubscriptions",
													"value": "false"
												},
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions?organization=<string>&includeExpiredSubscriptions=false&cursor=<string>&limit=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												},
												{
													"key": "includeExpiredSubscriptions",
													"value": "false"
												},
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found, status code 13004",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions?organization=<string>&includeExpiredSubscriptions=false&cursor=<string>&limit=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												},
												{
													"key": "includeExpiredSubscriptions",
													"value": "false"
												},
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add or renew subscriptions on a presence webhook",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{fuzeBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Fuze-Origin",
										"value": "Fuze Developer Center Postman Collection",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://developer.fuze.com/api/v1/webhooks/presence/:webhook-id/subscriptions",
									"protocol": "https",
									"host": [
										"developer",
										"fuze",
										"com"
									],
									"path": [
										"api",
										"v1",
										"webhooks",
										"presence",
										":webhook-id",
										"subscriptions"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>",
											"description": "Name of the organization that the webhook is a part of",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "webhook-id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Webhook identifier"
										}
									]
								},
								"description": "Adds presence subscriptions for users of your organization. If a subscription for a user already exists its expiration date will be extended."
							},
							"response": [
								{
									"name": "Bad request, status code 13007",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden, status code 13002",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict, status code 13009",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized, status code 13000 or 13001",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Ok, status code 0",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"subscriptionId\": -77173966,\n   \"userId\": \"1234567890987654321\",\n   \"expires\": \"2021-08-31T23:50:55Z\"\n  },\n  {\n   \"subscriptionId\": 11559185,\n   \"userId\": \"1234567890987654321\",\n   \"expires\": \"2021-08-31T23:50:55Z\"\n  }\n ],\n \"status\": -32728596,\n \"msg\": \"non laboris officia aute c\"\n}"
								},
								{
									"name": "Too many requests, status code 13006",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Deletes all subscriptions on a presence webhook",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{fuzeBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Fuze-Origin",
										"value": "Fuze Developer Center Postman Collection",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://developer.fuze.com/api/v1/webhooks/presence/:webhook-id/subscriptions",
									"protocol": "https",
									"host": [
										"developer",
										"fuze",
										"com"
									],
									"path": [
										"api",
										"v1",
										"webhooks",
										"presence",
										":webhook-id",
										"subscriptions"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>",
											"description": "Name of the organization that the webhook is a part of",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "webhook-id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Webhook identifier"
										}
									]
								},
								"description": "Deletes all subscriptions on the specified presence webhook."
							},
							"response": [
								{
									"name": "Ok, status code 0",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"subscriptionId\": 80454990,\n   \"userId\": \"1234567890987654321\",\n   \"expires\": \"2021-08-31T23:50:55Z\"\n  },\n  {\n   \"subscriptionId\": -47816739,\n   \"userId\": \"1234567890987654321\",\n   \"expires\": \"2021-08-31T23:50:55Z\"\n  }\n ],\n \"status\": -4098561,\n \"msg\": \"elit tempor\"\n}"
								},
								{
									"name": "Forbidden, status code 13002",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized, status code 13000 or 13001",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad request, status code 13007",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict, status code 13009",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found, status code 13004",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Too many requests, status code 13006",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get one presence subscription by id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{fuzeBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Fuze-Origin",
										"value": "Fuze Developer Center Postman Collection",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://developer.fuze.com/api/v1/webhooks/presence/:webhook-id/subscriptions/:subscription-id",
									"protocol": "https",
									"host": [
										"developer",
										"fuze",
										"com"
									],
									"path": [
										"api",
										"v1",
										"webhooks",
										"presence",
										":webhook-id",
										"subscriptions",
										":subscription-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>",
											"description": "Name of the organization that the webhook is a part of",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "webhook-id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Webhook identifier"
										},
										{
											"key": "subscription-id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Subscription identifier (123456789 or userId:5546844211654)"
										}
									]
								},
								"description": "Returns the details of one presence subscription. You may pass either the numeric <subscriptionId> or alternatively 'userId:<numericUserId>'."
							},
							"response": [
								{
									"name": "Conflict, status code 13009",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions/:subscription-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions",
												":subscription-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												},
												{
													"key": "subscription-id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Ok, status code 0",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions/:subscription-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions",
												":subscription-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												},
												{
													"key": "subscription-id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": {\n  \"subscriptionId\": 50008279,\n  \"userId\": \"1234567890987654321\",\n  \"expires\": \"2021-08-31T23:50:55Z\"\n },\n \"status\": 35568167,\n \"msg\": \"sunt nulla non minim\"\n}"
								},
								{
									"name": "Bad request, status code 13007",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions/:subscription-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions",
												":subscription-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												},
												{
													"key": "subscription-id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found, status code 13004",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions/:subscription-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions",
												":subscription-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												},
												{
													"key": "subscription-id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized, status code 13000 or 13001",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions/:subscription-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions",
												":subscription-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												},
												{
													"key": "subscription-id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Too many requests, status code 13006",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions/:subscription-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions",
												":subscription-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												},
												{
													"key": "subscription-id"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions/:subscription-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions",
												":subscription-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												},
												{
													"key": "subscription-id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden, status code 13002",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions/:subscription-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions",
												":subscription-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												},
												{
													"key": "subscription-id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete one presence subscription",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{fuzeBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Fuze-Origin",
										"value": "Fuze Developer Center Postman Collection",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://developer.fuze.com/api/v1/webhooks/presence/:webhook-id/subscriptions/:subscription-id",
									"protocol": "https",
									"host": [
										"developer",
										"fuze",
										"com"
									],
									"path": [
										"api",
										"v1",
										"webhooks",
										"presence",
										":webhook-id",
										"subscriptions",
										":subscription-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>",
											"description": "Name of the organization that the webhook is a part of",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "webhook-id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Webhook identifier"
										},
										{
											"key": "subscription-id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Subscription identifier (123456789 or userId:5546844211654)"
										}
									]
								},
								"description": "Deletes the specified presence subscription. You may pass either the numeric <subscriptionId> or alternatively 'userId:<numericUserId>'."
							},
							"response": [
								{
									"name": "Bad request, status code 13007",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions/:subscription-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions",
												":subscription-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												},
												{
													"key": "subscription-id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict, status code 13009",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions/:subscription-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions",
												":subscription-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												},
												{
													"key": "subscription-id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Ok, status code 0",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions/:subscription-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions",
												":subscription-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												},
												{
													"key": "subscription-id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": {\n  \"subscriptionId\": 50008279,\n  \"userId\": \"1234567890987654321\",\n  \"expires\": \"2021-08-31T23:50:55Z\"\n },\n \"status\": 35568167,\n \"msg\": \"sunt nulla non minim\"\n}"
								},
								{
									"name": "Unauthorized, status code 13000 or 13001",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions/:subscription-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions",
												":subscription-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												},
												{
													"key": "subscription-id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden, status code 13002",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions/:subscription-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions",
												":subscription-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												},
												{
													"key": "subscription-id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found, status code 13004",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions/:subscription-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions",
												":subscription-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												},
												{
													"key": "subscription-id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Too many requests, status code 13006",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions/:subscription-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions",
												":subscription-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												},
												{
													"key": "subscription-id"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/presence/:webhook-id/subscriptions/:subscription-id?organization=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"presence",
												":webhook-id",
												"subscriptions",
												":subscription-id"
											],
											"query": [
												{
													"key": "organization",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "webhook-id"
												},
												{
													"key": "subscription-id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get all presence webhooks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/webhooks/presence",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"webhooks",
								"presence"
							],
							"query": [
								{
									"key": "organization",
									"value": "<string>",
									"description": "Name of the organization that the webhook is a part of",
									"disabled": true
								},
								{
									"key": "includeExpiredSubscriptions",
									"value": "false",
									"description": "Should the response include expired subscriptions",
									"disabled": true
								},
								{
									"key": "integrationId",
									"value": "<string>",
									"description": "Filter by integrationId",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for item pagination. See 'cursor' field from previous response.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of items per page.",
									"disabled": true
								}
							]
						},
						"description": "Returns a list of all presence webhooks within your organization."
					},
					"response": [
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence?organization=<string>&includeExpiredSubscriptions=false&integrationId=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "includeExpiredSubscriptions",
											"value": "false"
										},
										{
											"key": "integrationId",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13007",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence?organization=<string>&includeExpiredSubscriptions=false&integrationId=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "includeExpiredSubscriptions",
											"value": "false"
										},
										{
											"key": "integrationId",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence?organization=<string>&includeExpiredSubscriptions=false&integrationId=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "includeExpiredSubscriptions",
											"value": "false"
										},
										{
											"key": "integrationId",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence?organization=<string>&includeExpiredSubscriptions=false&integrationId=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "includeExpiredSubscriptions",
											"value": "false"
										},
										{
											"key": "integrationId",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"active\": false,\n   \"authentication\": {\n    \"type\": \"none\",\n    \"token\": \"nostrud deserunt\"\n   },\n   \"created\": \"2010-11-02T02:59:02.556Z\",\n   \"id\": 61264378,\n   \"inactiveReason\": \"do nulla aute\",\n   \"integrationId\": 94562150,\n   \"label\": \"nostrud elit anim\",\n   \"modified\": \"2011-02-05T23:12:50.743Z\",\n   \"subscriptions\": [\n    {\n     \"expires\": \"2020-10-31T16:35:22.065Z\",\n     \"subscriptionId\": -76094793,\n     \"userId\": \"pariatur Duis id\"\n    },\n    {\n     \"expires\": \"2020-10-31T16:35:22.065Z\",\n     \"subscriptionId\": 55727921,\n     \"userId\": \"do culpa\"\n    }\n   ],\n   \"url\": \"do ipsum ea\"\n  },\n  {\n   \"active\": false,\n   \"authentication\": {\n    \"type\": \"token\",\n    \"token\": \"ea commodo do qui sit\"\n   },\n   \"created\": \"2012-11-17T13:48:49.312Z\",\n   \"id\": 88656994,\n   \"inactiveReason\": \"aliquip officia nostrud nulla\",\n   \"integrationId\": 42352716,\n   \"label\": \"esse laborum nisi\",\n   \"modified\": \"2015-05-19T23:03:04.973Z\",\n   \"subscriptions\": [\n    {\n     \"expires\": \"2020-10-31T16:35:22.065Z\",\n     \"subscriptionId\": -98771152,\n     \"userId\": \"cupidatat\"\n    },\n    {\n     \"expires\": \"2020-10-31T16:35:22.065Z\",\n     \"subscriptionId\": -69290452,\n     \"userId\": \"\"\n    }\n   ],\n   \"url\": \"minim reprehenderit aliqui\"\n  }\n ],\n \"pagination\": {\n  \"cursor\": \"Excepteur officia\",\n  \"limit\": -20989652\n },\n \"status\": 55244531,\n \"msg\": \"velit qui dolore minim non\"\n}"
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence?organization=<string>&includeExpiredSubscriptions=false&integrationId=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "includeExpiredSubscriptions",
											"value": "false"
										},
										{
											"key": "integrationId",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Conflict, status code 13009",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence?organization=<string>&includeExpiredSubscriptions=false&integrationId=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "includeExpiredSubscriptions",
											"value": "false"
										},
										{
											"key": "integrationId",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found, status code 13004",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence?organization=<string>&includeExpiredSubscriptions=false&integrationId=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "includeExpiredSubscriptions",
											"value": "false"
										},
										{
											"key": "integrationId",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence?organization=<string>&includeExpiredSubscriptions=false&integrationId=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "includeExpiredSubscriptions",
											"value": "false"
										},
										{
											"key": "integrationId",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create/Register a presence webhook",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/webhooks/presence",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"webhooks",
								"presence"
							],
							"query": [
								{
									"key": "organization",
									"value": "<string>",
									"description": "Name of the organization that the webhook is a part of",
									"disabled": true
								}
							]
						},
						"description": "Create/Register a webhook that will receive presence updates from users of your organization."
					},
					"response": [
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"active\": false,\n  \"authentication\": {\n   \"type\": \"none\",\n   \"token\": \"quis officia eu\"\n  },\n  \"created\": \"2013-10-21T18:35:05.580Z\",\n  \"id\": -53173285,\n  \"inactiveReason\": \"id esse\",\n  \"integrationId\": 49646880,\n  \"label\": \"eiusmod aute nostrud\",\n  \"modified\": \"2010-02-10T07:32:13.633Z\",\n  \"subscriptions\": [\n   {\n    \"expires\": \"2020-10-31T16:35:22.065Z\",\n    \"subscriptionId\": -42728494,\n    \"userId\": \"aute Excepteur laborum elit\"\n   },\n   {\n    \"expires\": \"2020-10-31T16:35:22.065Z\",\n    \"subscriptionId\": 6388549,\n    \"userId\": \"do\"\n   }\n  ],\n  \"url\": \"ad sit aliquip\"\n },\n \"status\": 81577989,\n \"msg\": \"laboris\"\n}"
						},
						{
							"name": "Bad request, status code 13007",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Conflict, status code 13009",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get one presence webhook by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/webhooks/presence/:webhook-id",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"webhooks",
								"presence",
								":webhook-id"
							],
							"query": [
								{
									"key": "organization",
									"value": "<string>",
									"description": "Name of the organization that the webhook is a part of",
									"disabled": true
								},
								{
									"key": "includeExpiredSubscriptions",
									"value": "false",
									"description": "Should the response include expired subscriptions",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "webhook-id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Webhook identifier"
								}
							]
						},
						"description": "Returns the details of one presence webhook."
					},
					"response": [
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence/:webhook-id?organization=<string>&includeExpiredSubscriptions=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence",
										":webhook-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "includeExpiredSubscriptions",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "webhook-id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"active\": false,\n  \"authentication\": {\n   \"type\": \"none\",\n   \"token\": \"quis officia eu\"\n  },\n  \"created\": \"2013-10-21T18:35:05.580Z\",\n  \"id\": -53173285,\n  \"inactiveReason\": \"id esse\",\n  \"integrationId\": 49646880,\n  \"label\": \"eiusmod aute nostrud\",\n  \"modified\": \"2010-02-10T07:32:13.633Z\",\n  \"subscriptions\": [\n   {\n    \"expires\": \"2020-10-31T16:35:22.065Z\",\n    \"subscriptionId\": -42728494,\n    \"userId\": \"aute Excepteur laborum elit\"\n   },\n   {\n    \"expires\": \"2020-10-31T16:35:22.065Z\",\n    \"subscriptionId\": 6388549,\n    \"userId\": \"do\"\n   }\n  ],\n  \"url\": \"ad sit aliquip\"\n },\n \"status\": 81577989,\n \"msg\": \"laboris\"\n}"
						},
						{
							"name": "Bad request, status code 13007",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence/:webhook-id?organization=<string>&includeExpiredSubscriptions=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence",
										":webhook-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "includeExpiredSubscriptions",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "webhook-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence/:webhook-id?organization=<string>&includeExpiredSubscriptions=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence",
										":webhook-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "includeExpiredSubscriptions",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "webhook-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence/:webhook-id?organization=<string>&includeExpiredSubscriptions=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence",
										":webhook-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "includeExpiredSubscriptions",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "webhook-id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence/:webhook-id?organization=<string>&includeExpiredSubscriptions=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence",
										":webhook-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "includeExpiredSubscriptions",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "webhook-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found, status code 13004",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence/:webhook-id?organization=<string>&includeExpiredSubscriptions=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence",
										":webhook-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "includeExpiredSubscriptions",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "webhook-id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence/:webhook-id?organization=<string>&includeExpiredSubscriptions=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence",
										":webhook-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "includeExpiredSubscriptions",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "webhook-id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Conflict, status code 13009",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence/:webhook-id?organization=<string>&includeExpiredSubscriptions=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence",
										":webhook-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "includeExpiredSubscriptions",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "webhook-id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Updates one presence webhook by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/webhooks/presence/:webhook-id",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"webhooks",
								"presence",
								":webhook-id"
							],
							"query": [
								{
									"key": "organization",
									"value": "<string>",
									"description": "Name of the organization that the webhook is a part of",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "webhook-id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Webhook identifier"
								}
							]
						},
						"description": "Lets you update the URL, label and authentication of the webhook."
					},
					"response": [
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence/:webhook-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence",
										":webhook-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "webhook-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13007",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence/:webhook-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence",
										":webhook-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "webhook-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence/:webhook-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence",
										":webhook-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "webhook-id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"active\": false,\n  \"authentication\": {\n   \"type\": \"none\",\n   \"token\": \"quis officia eu\"\n  },\n  \"created\": \"2013-10-21T18:35:05.580Z\",\n  \"id\": -53173285,\n  \"inactiveReason\": \"id esse\",\n  \"integrationId\": 49646880,\n  \"label\": \"eiusmod aute nostrud\",\n  \"modified\": \"2010-02-10T07:32:13.633Z\",\n  \"subscriptions\": [\n   {\n    \"expires\": \"2020-10-31T16:35:22.065Z\",\n    \"subscriptionId\": -42728494,\n    \"userId\": \"aute Excepteur laborum elit\"\n   },\n   {\n    \"expires\": \"2020-10-31T16:35:22.065Z\",\n    \"subscriptionId\": 6388549,\n    \"userId\": \"do\"\n   }\n  ],\n  \"url\": \"ad sit aliquip\"\n },\n \"status\": 81577989,\n \"msg\": \"laboris\"\n}"
						},
						{
							"name": "Not found, status code 13004",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence/:webhook-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence",
										":webhook-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "webhook-id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Conflict, status code 13009",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence/:webhook-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence",
										":webhook-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "webhook-id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence/:webhook-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence",
										":webhook-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "webhook-id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence/:webhook-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence",
										":webhook-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "webhook-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence/:webhook-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence",
										":webhook-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "webhook-id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete one presence webhook by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/webhooks/presence/:webhook-id",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"webhooks",
								"presence",
								":webhook-id"
							],
							"query": [
								{
									"key": "organization",
									"value": "<string>",
									"description": "Name of the organization that the webhook is a part of",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "webhook-id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Webhook identifier"
								}
							]
						},
						"description": "Deletes the specified presence webhook. Its subscriptions will be deleted as well."
					},
					"response": [
						{
							"name": "Not found, status code 13004",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence/:webhook-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence",
										":webhook-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "webhook-id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence/:webhook-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence",
										":webhook-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "webhook-id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence/:webhook-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence",
										":webhook-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "webhook-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence/:webhook-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence",
										":webhook-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "webhook-id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"active\": false,\n  \"authentication\": {\n   \"type\": \"none\",\n   \"token\": \"quis officia eu\"\n  },\n  \"created\": \"2013-10-21T18:35:05.580Z\",\n  \"id\": -53173285,\n  \"inactiveReason\": \"id esse\",\n  \"integrationId\": 49646880,\n  \"label\": \"eiusmod aute nostrud\",\n  \"modified\": \"2010-02-10T07:32:13.633Z\",\n  \"subscriptions\": [\n   {\n    \"expires\": \"2020-10-31T16:35:22.065Z\",\n    \"subscriptionId\": -42728494,\n    \"userId\": \"aute Excepteur laborum elit\"\n   },\n   {\n    \"expires\": \"2020-10-31T16:35:22.065Z\",\n    \"subscriptionId\": 6388549,\n    \"userId\": \"do\"\n   }\n  ],\n  \"url\": \"ad sit aliquip\"\n },\n \"status\": 81577989,\n \"msg\": \"laboris\"\n}"
						},
						{
							"name": "Bad request, status code 13007",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence/:webhook-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence",
										":webhook-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "webhook-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Conflict, status code 13009",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence/:webhook-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence",
										":webhook-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "webhook-id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence/:webhook-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence",
										":webhook-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "webhook-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/presence/:webhook-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"presence",
										":webhook-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "webhook-id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Get a test response",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{fuzeBearerToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": ""
					},
					{
						"key": "X-Fuze-Origin",
						"value": "Fuze Developer Center Postman Collection",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://developer.fuze.com/api/v1/test",
					"protocol": "https",
					"host": [
						"developer",
						"fuze",
						"com"
					],
					"path": [
						"api",
						"v1",
						"test"
					]
				},
				"description": "This endpoint should be used as an application level ping, only meaning that the API is alive. You may also use it to check if the authentication token is valid."
			},
			"response": [
				{
					"name": "Ok",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": {
									"content": "Added as a part of security scheme: bearer",
									"type": "text/plain"
								},
								"key": "Authorization",
								"value": "Bearer <token>"
							},
							{
								"key": "Accept",
								"value": ""
							}
						],
						"url": {
							"raw": "{{baseUrl}}/test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "<Bearer Token>",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://developer.fuze.com/api/v1",
			"type": "string"
		}
	]
}
