{
	"info": {
		"_postman_id": "e891418e-7cbe-4790-9d2b-ecbe08704be5",
		"name": "Developer Center (2020-08-25)",
		"description": "developer-api\n\nContact Support:\n Fuze",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "call-recordings",
			"item": [
				{
					"name": "Get all call recordings.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							},
							{
								"key": "FZ-TransactionId",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/call-recordings",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"call-recordings"
							],
							"query": [
								{
									"key": "linkedId",
									"value": "<string>",
									"description": "Get all call recordings associated with a linkedId",
									"disabled": true
								},
								{
									"key": "before",
									"value": "<string>",
									"description": "Get call recordings that ended before this timestamp. Must be in RFC3339 format.",
									"disabled": true
								},
								{
									"key": "after",
									"value": "<string>",
									"description": "Get call recordings that ended on or after this timestamp. Must be in RFC3339 format.",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<string>",
									"description": "Only return call recordings made by users in this department",
									"disabled": true
								},
								{
									"key": "userId",
									"value": "<string>",
									"description": "Only return call recordings for this userId",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for item pagination. See 'cursor' field from previous response.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of items per page.",
									"disabled": true
								}
							]
						},
						"description": "Get all call recordings for your organization. This endpoint is paginated and requires an integration token for authentication."
					},
					"response": [
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/call-recordings?linkedId=<string>&before=<string>&after=<string>&departmentId=<string>&userId=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings"
									],
									"query": [
										{
											"key": "linkedId",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "departmentId",
											"value": "<string>"
										},
										{
											"key": "userId",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/call-recordings?linkedId=<string>&before=<string>&after=<string>&departmentId=<string>&userId=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings"
									],
									"query": [
										{
											"key": "linkedId",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "departmentId",
											"value": "<string>"
										},
										{
											"key": "userId",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/call-recordings?linkedId=<string>&before=<string>&after=<string>&departmentId=<string>&userId=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings"
									],
									"query": [
										{
											"key": "linkedId",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "departmentId",
											"value": "<string>"
										},
										{
											"key": "userId",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/call-recordings?linkedId=<string>&before=<string>&after=<string>&departmentId=<string>&userId=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings"
									],
									"query": [
										{
											"key": "linkedId",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "departmentId",
											"value": "<string>"
										},
										{
											"key": "userId",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"recordingId\": -37009626,\n   \"linkedId\": \"cam-z6-call5-1495559375.646708\",\n   \"userId\": 15625611,\n   \"departmentId\": 69765228,\n   \"startedAt\": \"2020-06-29T16:46:46+01:00\",\n   \"endedAt\": \"2020-06-29T16:47:30+01:00\",\n   \"duration\": -12215212,\n   \"retainedUntil\": \"2020-07-29T16:47:30+01:00\"\n  },\n  {\n   \"recordingId\": -52784480,\n   \"linkedId\": \"cam-z6-call5-1495559375.646708\",\n   \"userId\": 41824477,\n   \"departmentId\": 63794214,\n   \"startedAt\": \"2020-06-29T16:46:46+01:00\",\n   \"endedAt\": \"2020-06-29T16:47:30+01:00\",\n   \"duration\": -38668087,\n   \"retainedUntil\": \"2020-07-29T16:47:30+01:00\"\n  }\n ],\n \"pagination\": {\n  \"cursor\": \"esse cillum Duis ut\",\n  \"limit\": 51708451\n },\n \"msg\": \"ea ex tempor occaecat in\",\n \"status\": -83890567\n}"
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/call-recordings?linkedId=<string>&before=<string>&after=<string>&departmentId=<string>&userId=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings"
									],
									"query": [
										{
											"key": "linkedId",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "departmentId",
											"value": "<string>"
										},
										{
											"key": "userId",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/call-recordings?linkedId=<string>&before=<string>&after=<string>&departmentId=<string>&userId=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings"
									],
									"query": [
										{
											"key": "linkedId",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "departmentId",
											"value": "<string>"
										},
										{
											"key": "userId",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a call recording by id.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							},
							{
								"key": "FZ-TransactionId",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/call-recordings/:recording-id",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"call-recordings",
								":recording-id"
							],
							"variable": [
								{
									"id": "4a85f79d-7b1e-4525-a32c-a5a37fe1892c",
									"key": "recording-id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Call recording identifier."
								}
							]
						},
						"description": "Get a call recording by id. This endpoint requires an integration token for authentication."
					},
					"response": [
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found, status code 13004",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"recordingId\": \"<string>\",\n \"linkedId\": \"<string>\",\n \"userId\": \"<string>\",\n \"departmentId\": \"<string>\",\n \"startedAt\": \"<dateTime>\",\n \"endedAt\": \"<dateTime>\",\n \"duration\": \"<long>\",\n \"retainedUntil\": \"<dateTime>\"\n}"
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a call recording media by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							},
							{
								"key": "FZ-TransactionId",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/call-recordings/:recording-id/media",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"call-recordings",
								":recording-id",
								"media"
							],
							"variable": [
								{
									"id": "174a6e6e-8f24-49fc-ac62-1182d63a9939",
									"key": "recording-id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Call recording identifier."
								}
							]
						},
						"description": "Get a call recording media by id. This endpoint requires an integration token for authentication."
					},
					"response": [
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id/media",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id",
										"media"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Temporary redirect.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id/media",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id",
										"media"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Temporary Redirect (since HTTP/1.1)",
							"code": 307,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id/media",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id",
										"media"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found, status code 13004",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id/media",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id",
										"media"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id/media",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id",
										"media"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id/media",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id",
										"media"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/call-recordings/:recording-id/media",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"call-recordings",
										":recording-id",
										"media"
									],
									"variable": [
										{
											"key": "recording-id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "calls",
			"item": [
				{
					"name": "call-recordings",
					"item": [
						{
							"name": "Get recordings for a call.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{fuzeBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-Fuze-Origin",
										"value": "Fuze Developer Center Postman Collection",
										"type": "text"
									},
									{
										"key": "FZ-TransactionId",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://developer.fuze.com/api/v1/calls/:call-id/call-recordings",
									"protocol": "https",
									"host": [
										"developer",
										"fuze",
										"com"
									],
									"path": [
										"api",
										"v1",
										"calls",
										":call-id",
										"call-recordings"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for item pagination. See 'cursor' field from previous response.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "100",
											"description": "Number of items per page.",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "bc274f64-968d-4b13-bec4-2295e47f9cbf",
											"key": "call-id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Call identifier."
										}
									]
								},
								"description": "Get the recordings of a call. This endpoint requires an integration token for authentication."
							},
							"response": [
								{
									"name": "Not found, status code 13004",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/calls/:call-id/call-recordings?cursor=<string>&limit=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calls",
												":call-id",
												"call-recordings"
											],
											"query": [
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												}
											],
											"variable": [
												{
													"key": "call-id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden, status code 13002",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/calls/:call-id/call-recordings?cursor=<string>&limit=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calls",
												":call-id",
												"call-recordings"
											],
											"query": [
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												}
											],
											"variable": [
												{
													"key": "call-id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/calls/:call-id/call-recordings?cursor=<string>&limit=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calls",
												":call-id",
												"call-recordings"
											],
											"query": [
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												}
											],
											"variable": [
												{
													"key": "call-id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Too many requests, status code 13006",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/calls/:call-id/call-recordings?cursor=<string>&limit=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calls",
												":call-id",
												"call-recordings"
											],
											"query": [
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												}
											],
											"variable": [
												{
													"key": "call-id"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized, status code 13000 or 13001",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/calls/:call-id/call-recordings?cursor=<string>&limit=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calls",
												":call-id",
												"call-recordings"
											],
											"query": [
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												}
											],
											"variable": [
												{
													"key": "call-id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Ok, status code 0",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/calls/:call-id/call-recordings?cursor=<string>&limit=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calls",
												":call-id",
												"call-recordings"
											],
											"query": [
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												}
											],
											"variable": [
												{
													"key": "call-id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"recordingId\": 68533104,\n   \"linkedId\": \"cam-z6-call5-1495559375.646708\",\n   \"userId\": -16971006,\n   \"departmentId\": -66443830,\n   \"startedAt\": \"2020-06-29T16:46:46+01:00\",\n   \"endedAt\": \"2020-06-29T16:47:30+01:00\",\n   \"duration\": 55204097,\n   \"retainedUntil\": \"2020-07-29T16:47:30+01:00\"\n  },\n  {\n   \"recordingId\": 37488434,\n   \"linkedId\": \"cam-z6-call5-1495559375.646708\",\n   \"userId\": 52465330,\n   \"departmentId\": -54155986,\n   \"startedAt\": \"2020-06-29T16:46:46+01:00\",\n   \"endedAt\": \"2020-06-29T16:47:30+01:00\",\n   \"duration\": 60158937,\n   \"retainedUntil\": \"2020-07-29T16:47:30+01:00\"\n  }\n ],\n \"pagination\": {\n  \"cursor\": \"sint in\",\n  \"limit\": -94469933\n },\n \"msg\": \"voluptate do amet commodo\",\n \"status\": 29447069\n}"
								},
								{
									"name": "Bad request, status code 13003",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/calls/:call-id/call-recordings?cursor=<string>&limit=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calls",
												":call-id",
												"call-recordings"
											],
											"query": [
												{
													"key": "cursor",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "100"
												}
											],
											"variable": [
												{
													"key": "call-id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get one call.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							},
							{
								"key": "FZ-TransactionId",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/calls/:call-id",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"calls",
								":call-id"
							],
							"variable": [
								{
									"id": "c27aeba1-49d1-4384-8955-b7054db5daeb",
									"key": "call-id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Call identifier."
								}
							]
						},
						"description": "Get the details of one call. This endpoint requires an integration token for authentication."
					},
					"response": [
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/calls/:call-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls",
										":call-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "call-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/calls/:call-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls",
										":call-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "call-id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/calls/:call-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls",
										":call-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "call-id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found, status code 13004",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/calls/:call-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls",
										":call-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "call-id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/calls/:call-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls",
										":call-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "call-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/calls/:call-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls",
										":call-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "call-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/calls/:call-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls",
										":call-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "call-id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"direction\": \"Inbound\",\n  \"disposition\": \"Voicemail\",\n  \"duration\": 42510555,\n  \"endedAt\": \"2020-07-30T23:25:24Z\",\n  \"from\": {\n   \"connectedAt\": \"2020-07-30T23:23:54Z\",\n   \"disconnectedAt\": \"2020-07-30T23:25:24Z\",\n   \"number\": \"6172456167\",\n   \"numberE164\": \"+16172456167\",\n   \"name\": \"John Smith\",\n   \"username\": \"jsmith@yourorganization.com\",\n   \"serviceId\": 10605325,\n   \"departmentName\": \"Headquarters\",\n   \"deviceType\": \"Polycom\"\n  },\n  \"legs\": [\n   {\n    \"legType\": \"Hangup\",\n    \"timestamp\": \"2020-07-30T23:25:24Z\",\n    \"number\": \"+17078652255\",\n    \"username\": \"tempor do dolore\",\n    \"serviceId\": 33681126,\n    \"departmentName\": \"Headquarters\",\n    \"deviceType\": \"Polycom\",\n    \"menuName\": \"proi\",\n    \"menuPrompt\": \"dolor et\",\n    \"menuOption\": \"aliqua ad\",\n    \"optionAction\": \"sint Excepteur Lorem\",\n    \"optionArg\": \"quis velit\",\n    \"queueName\": \"anim\"\n   },\n   {\n    \"legType\": \"Hangup\",\n    \"timestamp\": \"2020-07-30T23:25:24Z\",\n    \"number\": \"+17078652255\",\n    \"username\": \"ea consequat enim\",\n    \"serviceId\": -24157803,\n    \"departmentName\": \"Headquarters\",\n    \"deviceType\": \"Polycom\",\n    \"menuName\": \"vel\",\n    \"menuPrompt\": \"Lorem eu adipisicing\",\n    \"menuOption\": \"pariatur\",\n    \"optionAction\": \"aliqua ut in id magna\",\n    \"optionArg\": \"velit dolor est\",\n    \"queueName\": \"non\"\n   }\n  ],\n  \"linkedId\": \"cam-z6-call5-1596151434.481005\",\n  \"startedAt\": \"2020-07-30T23:23:54Z\",\n  \"to\": {\n   \"connectedAt\": \"2020-07-30T23:23:54Z\",\n   \"disconnectedAt\": \"2020-07-30T23:25:24Z\",\n   \"number\": \"6172456167\",\n   \"numberE164\": \"+16172456167\",\n   \"name\": \"John Smith\",\n   \"username\": \"jsmith@yourorganization.com\",\n   \"serviceId\": 71662715,\n   \"departmentName\": \"Headquarters\",\n   \"deviceType\": \"Polycom\"\n  },\n  \"version\": {\n   \"major\": -18086871,\n   \"minor\": -70450766,\n   \"point\": -94207764,\n   \"label\": \"veniam exercitat\"\n  },\n  \"answeredAt\": \"2020-07-30T23:23:54Z\",\n  \"initialQueueName\": \"veniam laboris ullamco\",\n  \"joinedLinkedIds\": [\n   \"proident est\",\n   \"amet mollit\"\n  ]\n },\n \"msg\": \"qui nulla adipisicing\",\n \"status\": -17229275\n}"
						}
					]
				},
				{
					"name": "Get all calls.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							},
							{
								"key": "FZ-TransactionId",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/calls",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"calls"
							],
							"query": [
								{
									"key": "after",
									"value": "<string>",
									"description": "Only calls completed after this date",
									"disabled": true
								},
								{
									"key": "before",
									"value": "<string>",
									"description": "Only calls completed before this date. Must be after \"after\" date",
									"disabled": true
								},
								{
									"key": "departmentName",
									"value": "<string>",
									"description": "Calls from specific departments. Can be a comma-separated list (no spaces)",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<string>",
									"description": "Calls from one specific department by its numeric ID",
									"disabled": true
								},
								{
									"key": "username",
									"value": "<string>",
									"description": "Calls from a specific user, by username. Don't set username and userId at the same time",
									"disabled": true
								},
								{
									"key": "userId",
									"value": "<string>",
									"description": "Calls from a specific user, by numeric ID. Don't set userId and username at the same time",
									"disabled": true
								},
								{
									"key": "direction",
									"value": "<string>",
									"description": "Call direction. Distinguishes between calls within the company (internal), calls from a company number to an outside number (outbound), calls from an outside number to a company number (inbound), and platform interactions like checking voicemail (platform). Can be a comma-separated list (no spaces)",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for item pagination. See 'cursor' field from previous response.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of items per page.",
									"disabled": true
								}
							]
						},
						"description": "Get all calls for your organization. This endpoint is paginated and requires an integration token for authentication."
					},
					"response": [
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/calls?after=<string>&before=<string>&departmentName=<string>&departmentId=<string>&username=<string>&userId=<string>&direction=<string>&organization=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "departmentName",
											"value": "<string>"
										},
										{
											"key": "departmentId",
											"value": "<string>"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "userId",
											"value": "<string>"
										},
										{
											"key": "direction",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/calls?after=<string>&before=<string>&departmentName=<string>&departmentId=<string>&username=<string>&userId=<string>&direction=<string>&organization=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "departmentName",
											"value": "<string>"
										},
										{
											"key": "departmentId",
											"value": "<string>"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "userId",
											"value": "<string>"
										},
										{
											"key": "direction",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/calls?after=<string>&before=<string>&departmentName=<string>&departmentId=<string>&username=<string>&userId=<string>&direction=<string>&organization=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "departmentName",
											"value": "<string>"
										},
										{
											"key": "departmentId",
											"value": "<string>"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "userId",
											"value": "<string>"
										},
										{
											"key": "direction",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"direction\": \"Inbound\",\n   \"disposition\": \"Voicemail\",\n   \"duration\": -81386964,\n   \"endedAt\": \"2020-07-30T23:25:24Z\",\n   \"from\": {\n    \"connectedAt\": \"2020-07-30T23:23:54Z\",\n    \"disconnectedAt\": \"2020-07-30T23:25:24Z\",\n    \"number\": \"6172456167\",\n    \"numberE164\": \"+16172456167\",\n    \"name\": \"John Smith\",\n    \"username\": \"jsmith@yourorganization.com\",\n    \"serviceId\": 32170888,\n    \"departmentName\": \"Headquarters\",\n    \"deviceType\": \"Polycom\"\n   },\n   \"legs\": [\n    {\n     \"legType\": \"Hangup\",\n     \"timestamp\": \"2020-07-30T23:25:24Z\",\n     \"number\": \"+17078652255\",\n     \"username\": \"proident incididunt\",\n     \"serviceId\": -59741872,\n     \"departmentName\": \"Headquarters\",\n     \"deviceType\": \"Polycom\",\n     \"menuName\": \"ea cupidatat dolor\",\n     \"menuPrompt\": \"minim cillum deserunt aliqua\",\n     \"menuOption\": \"eiusmod\",\n     \"optionAction\": \"nostrud Duis\",\n     \"optionArg\": \"magna id laborum\",\n     \"queueName\": \"Ut tempor velit pariatur\"\n    },\n    {\n     \"legType\": \"Hangup\",\n     \"timestamp\": \"2020-07-30T23:25:24Z\",\n     \"number\": \"+17078652255\",\n     \"username\": \"reprehenderit\",\n     \"serviceId\": 69108357,\n     \"departmentName\": \"Headquarters\",\n     \"deviceType\": \"Polycom\",\n     \"menuName\": \"ut\",\n     \"menuPrompt\": \"ut officia\",\n     \"menuOption\": \"mollit eu laboris\",\n     \"optionAction\": \"sed veli\",\n     \"optionArg\": \"deserunt\",\n     \"queueName\": \"culpa ad enim\"\n    }\n   ],\n   \"linkedId\": \"cam-z6-call5-1596151434.481005\",\n   \"startedAt\": \"2020-07-30T23:23:54Z\",\n   \"to\": {\n    \"connectedAt\": \"2020-07-30T23:23:54Z\",\n    \"disconnectedAt\": \"2020-07-30T23:25:24Z\",\n    \"number\": \"6172456167\",\n    \"numberE164\": \"+16172456167\",\n    \"name\": \"John Smith\",\n    \"username\": \"jsmith@yourorganization.com\",\n    \"serviceId\": -65385136,\n    \"departmentName\": \"Headquarters\",\n    \"deviceType\": \"Polycom\"\n   },\n   \"version\": {\n    \"major\": -29479256,\n    \"minor\": -66119188,\n    \"point\": 5969096,\n    \"label\": \"do in pariatur occaecat\"\n   },\n   \"answeredAt\": \"2020-07-30T23:23:54Z\",\n   \"initialQueueName\": \"culpa minim\",\n   \"joinedLinkedIds\": [\n    \"ea Ut culpa tempor\",\n    \"et proident\"\n   ]\n  },\n  {\n   \"direction\": \"Inbound\",\n   \"disposition\": \"Voicemail\",\n   \"duration\": 45417382,\n   \"endedAt\": \"2020-07-30T23:25:24Z\",\n   \"from\": {\n    \"connectedAt\": \"2020-07-30T23:23:54Z\",\n    \"disconnectedAt\": \"2020-07-30T23:25:24Z\",\n    \"number\": \"6172456167\",\n    \"numberE164\": \"+16172456167\",\n    \"name\": \"John Smith\",\n    \"username\": \"jsmith@yourorganization.com\",\n    \"serviceId\": 31790213,\n    \"departmentName\": \"Headquarters\",\n    \"deviceType\": \"Polycom\"\n   },\n   \"legs\": [\n    {\n     \"legType\": \"Hangup\",\n     \"timestamp\": \"2020-07-30T23:25:24Z\",\n     \"number\": \"+17078652255\",\n     \"username\": \"anim ut et laboris\",\n     \"serviceId\": -61648056,\n     \"departmentName\": \"Headquarters\",\n     \"deviceType\": \"Polycom\",\n     \"menuName\": \"dolore exercitation\",\n     \"menuPrompt\": \"nulla ea\",\n     \"menuOption\": \"incididunt id laborum esse\",\n     \"optionAction\": \"mollit\",\n     \"optionArg\": \"deserunt non sunt dolor\",\n     \"queueName\": \"cupidatat deserunt Ut\"\n    },\n    {\n     \"legType\": \"Hangup\",\n     \"timestamp\": \"2020-07-30T23:25:24Z\",\n     \"number\": \"+17078652255\",\n     \"username\": \"ex esse id\",\n     \"serviceId\": 48556128,\n     \"departmentName\": \"Headquarters\",\n     \"deviceType\": \"Polycom\",\n     \"menuName\": \"cupidatat proident incididunt id\",\n     \"menuPrompt\": \"exercitation do nostrud proident incididunt\",\n     \"menuOption\": \"ipsum labore\",\n     \"optionAction\": \"qui ad cons\",\n     \"optionArg\": \"amet est\",\n     \"queueName\": \"ullamco ipsum proident aliqua nostrud\"\n    }\n   ],\n   \"linkedId\": \"cam-z6-call5-1596151434.481005\",\n   \"startedAt\": \"2020-07-30T23:23:54Z\",\n   \"to\": {\n    \"connectedAt\": \"2020-07-30T23:23:54Z\",\n    \"disconnectedAt\": \"2020-07-30T23:25:24Z\",\n    \"number\": \"6172456167\",\n    \"numberE164\": \"+16172456167\",\n    \"name\": \"John Smith\",\n    \"username\": \"jsmith@yourorganization.com\",\n    \"serviceId\": -17812392,\n    \"departmentName\": \"Headquarters\",\n    \"deviceType\": \"Polycom\"\n   },\n   \"version\": {\n    \"major\": 7997370,\n    \"minor\": -5022314,\n    \"point\": -86503660,\n    \"label\": \"Lorem qui aliqua mollit\"\n   },\n   \"answeredAt\": \"2020-07-30T23:23:54Z\",\n   \"initialQueueName\": \"et proident adipisicing mollit\",\n   \"joinedLinkedIds\": [\n    \"velit\",\n    \"in dolor deserunt\"\n   ]\n  }\n ],\n \"pagination\": {\n  \"cursor\": \"anim dolor\",\n  \"limit\": 95256377\n },\n \"msg\": \"eiusmod\",\n \"status\": 40405240\n}"
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/calls?after=<string>&before=<string>&departmentName=<string>&departmentId=<string>&username=<string>&userId=<string>&direction=<string>&organization=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "departmentName",
											"value": "<string>"
										},
										{
											"key": "departmentId",
											"value": "<string>"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "userId",
											"value": "<string>"
										},
										{
											"key": "direction",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/calls?after=<string>&before=<string>&departmentName=<string>&departmentId=<string>&username=<string>&userId=<string>&direction=<string>&organization=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "departmentName",
											"value": "<string>"
										},
										{
											"key": "departmentId",
											"value": "<string>"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "userId",
											"value": "<string>"
										},
										{
											"key": "direction",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/calls?after=<string>&before=<string>&departmentName=<string>&departmentId=<string>&username=<string>&userId=<string>&direction=<string>&organization=<string>&cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calls"
									],
									"query": [
										{
											"key": "after",
											"value": "<string>"
										},
										{
											"key": "before",
											"value": "<string>"
										},
										{
											"key": "departmentName",
											"value": "<string>"
										},
										{
											"key": "departmentId",
											"value": "<string>"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "userId",
											"value": "<string>"
										},
										{
											"key": "direction",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "departments",
			"item": [
				{
					"name": "List all departments.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							},
							{
								"key": "FZ-TransactionId",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/departments",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"departments"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for item pagination. See 'cursor' field from previous response.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of items per page.",
									"disabled": true
								}
							]
						},
						"description": "List all departments. This endpoint is paginated and requires an integration token for authentication."
					},
					"response": [
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/departments?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/departments?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/departments?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/departments?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/departments?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/departments?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"response\": [\n  {\n   \"departmentId\": \"<long>\",\n   \"name\": \"<string>\",\n   \"description\": \"<string>\",\n   \"active\": false,\n   \"createdOn\": \"<dateTime>\",\n   \"lastModifiedOn\": \"<dateTime>\",\n   \"defaultDepartment\": false\n  },\n  {\n   \"departmentId\": \"<long>\",\n   \"name\": \"<string>\",\n   \"description\": \"<string>\",\n   \"active\": false,\n   \"createdOn\": \"<dateTime>\",\n   \"lastModifiedOn\": \"<dateTime>\",\n   \"defaultDepartment\": false\n  }\n ],\n \"pagination\": {\n  \"cursor\": \"<string>\",\n  \"limit\": \"<long>\"\n }\n}"
						}
					]
				},
				{
					"name": "Get one department details.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							},
							{
								"key": "FZ-TransactionId",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/departments/:department-id",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"departments",
								":department-id"
							],
							"variable": [
								{
									"id": "fc96b01b-f38d-4314-a3c1-4b80966a7b7b",
									"key": "department-id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Department identifier."
								}
							]
						},
						"description": "Get one department details. This endpoint requires an integration token for authentication."
					},
					"response": [
						{
							"name": "Not found, status code 13004",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/departments/:department-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments",
										":department-id"
									],
									"variable": [
										{
											"key": "department-id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/departments/:department-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments",
										":department-id"
									],
									"variable": [
										{
											"key": "department-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/departments/:department-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments",
										":department-id"
									],
									"variable": [
										{
											"key": "department-id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/departments/:department-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments",
										":department-id"
									],
									"variable": [
										{
											"key": "department-id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"departmentId\": \"<long>\",\n \"name\": \"<string>\",\n \"description\": \"<string>\",\n \"active\": false,\n \"createdOn\": \"<dateTime>\",\n \"lastModifiedOn\": \"<dateTime>\",\n \"defaultDepartment\": false\n}"
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/departments/:department-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments",
										":department-id"
									],
									"variable": [
										{
											"key": "department-id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/departments/:department-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments",
										":department-id"
									],
									"variable": [
										{
											"key": "department-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/departments/:department-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"departments",
										":department-id"
									],
									"variable": [
										{
											"key": "department-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "locations",
			"item": [
				{
					"name": "List all the locations of your organization.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							},
							{
								"key": "FZ-TransactionId",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/locations",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"locations"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for item pagination. See 'cursor' field from previous response.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of items per page.",
									"disabled": true
								}
							]
						},
						"description": "List all the locations of your organization. This endpoint is paginated and requires an integration token for authentication."
					},
					"response": [
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/locations?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/locations?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/locations?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/locations?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/locations?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/locations?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"response\": [\n  {\n   \"locationId\": \"<long>\",\n   \"name\": \"<string>\",\n   \"locationCode\": \"<string>\",\n   \"organizationCode\": \"<string>\",\n   \"timeZone\": \"<string>\",\n   \"createdOn\": \"<dateTime>\",\n   \"lastModifiedOn\": \"<dateTime>\",\n   \"active\": false,\n   \"addressLine1\": \"<string>\",\n   \"addressLine2\": \"<string>\",\n   \"city\": \"<string>\",\n   \"state\": \"<string>\",\n   \"postalCode\": \"<string>\",\n   \"countryCode\": \"<string>\"\n  },\n  {\n   \"locationId\": \"<long>\",\n   \"name\": \"<string>\",\n   \"locationCode\": \"<string>\",\n   \"organizationCode\": \"<string>\",\n   \"timeZone\": \"<string>\",\n   \"createdOn\": \"<dateTime>\",\n   \"lastModifiedOn\": \"<dateTime>\",\n   \"active\": false,\n   \"addressLine1\": \"<string>\",\n   \"addressLine2\": \"<string>\",\n   \"city\": \"<string>\",\n   \"state\": \"<string>\",\n   \"postalCode\": \"<string>\",\n   \"countryCode\": \"<string>\"\n  }\n ],\n \"pagination\": {\n  \"cursor\": \"<string>\",\n  \"limit\": \"<long>\"\n }\n}"
						}
					]
				},
				{
					"name": "Get one location details.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							},
							{
								"key": "FZ-TransactionId",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/locations/:location-id",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"locations",
								":location-id"
							],
							"variable": [
								{
									"id": "f0fc8552-a14f-48a7-95b2-063761667763",
									"key": "location-id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Location identifier."
								}
							]
						},
						"description": "Get one location details. This endpoint requires an integration token for authentication."
					},
					"response": [
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/locations/:location-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations",
										":location-id"
									],
									"variable": [
										{
											"key": "location-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/locations/:location-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations",
										":location-id"
									],
									"variable": [
										{
											"key": "location-id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found, status code 13004",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/locations/:location-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations",
										":location-id"
									],
									"variable": [
										{
											"key": "location-id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/locations/:location-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations",
										":location-id"
									],
									"variable": [
										{
											"key": "location-id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"locationId\": \"<long>\",\n \"name\": \"<string>\",\n \"locationCode\": \"<string>\",\n \"organizationCode\": \"<string>\",\n \"timeZone\": \"<string>\",\n \"createdOn\": \"<dateTime>\",\n \"lastModifiedOn\": \"<dateTime>\",\n \"active\": false,\n \"addressLine1\": \"<string>\",\n \"addressLine2\": \"<string>\",\n \"city\": \"<string>\",\n \"state\": \"<string>\",\n \"postalCode\": \"<string>\",\n \"countryCode\": \"<string>\"\n}"
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/locations/:location-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations",
										":location-id"
									],
									"variable": [
										{
											"key": "location-id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/locations/:location-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations",
										":location-id"
									],
									"variable": [
										{
											"key": "location-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/locations/:location-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations",
										":location-id"
									],
									"variable": [
										{
											"key": "location-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "meetings",
			"item": [
				{
					"name": "Create one meeting.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							},
							{
								"key": "FZ-TransactionId",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"host\": \"<long>\",\n    \"subject\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"endTime\": \"<dateTime>\",\n    \"enableChimes\": false,\n    \"muteOnEntry\": false,\n    \"autoAccept\": true,\n    \"autoRecord\": false\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://developer.fuze.com/api/v1/meetings",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"meetings"
							],
							"query": [
								{
									"key": "organization",
									"value": "<string>",
									"description": "Organization owner of this meeting",
									"disabled": true
								}
							]
						},
						"description": "Create one meeting. This endpoint requires an integration token for authentication."
					},
					"response": [
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"host\": \"<long>\",\n    \"startTime\": \"<dateTime>\",\n    \"subject\": \"<string>\",\n    \"enableChimes\": false,\n    \"muteOnEntry\": false,\n    \"autoAccept\": false,\n    \"autoRecord\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/meetings?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"host\": \"<long>\",\n    \"startTime\": \"<dateTime>\",\n    \"subject\": \"<string>\",\n    \"enableChimes\": false,\n    \"muteOnEntry\": false,\n    \"autoAccept\": false,\n    \"autoRecord\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/meetings?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"host\": \"<long>\",\n    \"startTime\": \"<dateTime>\",\n    \"subject\": \"<string>\",\n    \"enableChimes\": false,\n    \"muteOnEntry\": false,\n    \"autoAccept\": false,\n    \"autoRecord\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/meetings?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"host\": \"<long>\",\n    \"startTime\": \"<dateTime>\",\n    \"subject\": \"<string>\",\n    \"enableChimes\": false,\n    \"muteOnEntry\": false,\n    \"autoAccept\": false,\n    \"autoRecord\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/meetings?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"host\": \"<long>\",\n    \"startTime\": \"<dateTime>\",\n    \"subject\": \"<string>\",\n    \"enableChimes\": false,\n    \"muteOnEntry\": false,\n    \"autoAccept\": false,\n    \"autoRecord\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/meetings?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"host\": \"<long>\",\n \"subject\": \"<string>\",\n \"version\": \"<string>\",\n \"startTime\": \"<dateTime>\",\n \"endTime\": \"<dateTime>\",\n \"enableChimes\": false,\n \"muteOnEntry\": false,\n \"autoAccept\": false,\n \"autoRecord\": false,\n \"displayTollFree\": false,\n \"accessUrl\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"endTime\": \"<dateTime>\",\n    \"host\": \"<long>\",\n    \"startTime\": \"<dateTime>\",\n    \"subject\": \"<string>\",\n    \"enableChimes\": false,\n    \"muteOnEntry\": false,\n    \"autoAccept\": false,\n    \"autoRecord\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/meetings?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get one meeting by id.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							},
							{
								"key": "FZ-TransactionId",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/meetings/:meeting-id",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"meetings",
								":meeting-id"
							],
							"query": [
								{
									"key": "organization",
									"value": "<string>",
									"description": "Organization owner of this meeting",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "meeting-id",
									"value": "string",
									"type": "string",
									"description": "(Required) Meeting identifier."
								}
							]
						},
						"description": "Get the details of one meeting. This endpoint requires an integration token for authentication."
					},
					"response": [
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found, status code 13004",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"host\": \"<long>\",\n \"subject\": \"<string>\",\n \"version\": \"<string>\",\n \"startTime\": \"<dateTime>\",\n \"endTime\": \"<dateTime>\",\n \"enableChimes\": false,\n \"muteOnEntry\": false,\n \"autoAccept\": false,\n \"autoRecord\": false,\n \"displayTollFree\": false,\n \"accessUrl\": \"<string>\"\n}"
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete one meeting by id.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							},
							{
								"key": "FZ-TransactionId",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/meetings/:meeting-id",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"meetings",
								":meeting-id"
							],
							"query": [
								{
									"key": "organization",
									"value": "<string>",
									"description": "Organization owner of this meeting",
									"disabled": true
								}
							],
							"variable": [
								{
									"id": "ebb78076-75f7-4b33-9a3d-d0bd1ce2890f",
									"key": "meeting-id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Meeting identifier."
								}
							]
						},
						"description": "Delete one meeting. This endpoint requires an integration token for authentication."
					},
					"response": [
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"host\": \"<long>\",\n \"subject\": \"<string>\",\n \"version\": \"<string>\",\n \"startTime\": \"<dateTime>\",\n \"endTime\": \"<dateTime>\",\n \"enableChimes\": false,\n \"muteOnEntry\": false,\n \"autoAccept\": false,\n \"autoRecord\": false,\n \"displayTollFree\": false,\n \"accessUrl\": \"<string>\"\n}"
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found, status code 13004",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meeting-id?organization=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meeting-id"
									],
									"query": [
										{
											"key": "organization",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "meeting-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "organizations",
			"item": [
				{
					"name": "List all organizations.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							},
							{
								"key": "FZ-TransactionId",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/organizations",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"organizations"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for item pagination. See 'cursor' field from previous response.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of items per page.",
									"disabled": true
								}
							]
						},
						"description": "List all organizations. This endpoint is paginated and requires an integration token for authentication."
					},
					"response": [
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organizations?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organizations?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organizations?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organizations?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organizations?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organizations?cursor=<string>&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"response\": [\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\",\n   \"code\": \"<string>\",\n   \"active\": false,\n   \"createdOn\": \"<dateTime>\",\n   \"lastModifiedOn\": \"<dateTime>\"\n  },\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\",\n   \"code\": \"<string>\",\n   \"active\": false,\n   \"createdOn\": \"<dateTime>\",\n   \"lastModifiedOn\": \"<dateTime>\"\n  }\n ],\n \"pagination\": {\n  \"cursor\": \"<string>\",\n  \"limit\": \"<long>\"\n }\n}"
						}
					]
				},
				{
					"name": "Get one organization details.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							},
							{
								"key": "FZ-TransactionId",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/organizations/:organization-code",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"organizations",
								":organization-code"
							],
							"variable": [
								{
									"id": "5e82c4ed-ce6d-413f-9573-a5cb88c6d0ff",
									"key": "organization-code",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Organization code."
								}
							]
						},
						"description": "Get one organization details. This endpoint requires an integration token for authentication."
					},
					"response": [
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organization-code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organization-code"
									],
									"variable": [
										{
											"key": "organization-code"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organization-code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organization-code"
									],
									"variable": [
										{
											"key": "organization-code"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found, status code 13004",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organization-code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organization-code"
									],
									"variable": [
										{
											"key": "organization-code"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organization-code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organization-code"
									],
									"variable": [
										{
											"key": "organization-code"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organization-code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organization-code"
									],
									"variable": [
										{
											"key": "organization-code"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organization-code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organization-code"
									],
									"variable": [
										{
											"key": "organization-code"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"name\": \"<string>\",\n \"code\": \"<string>\",\n \"active\": false,\n \"createdOn\": \"<dateTime>\",\n \"lastModifiedOn\": \"<dateTime>\"\n}"
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organization-code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organization-code"
									],
									"variable": [
										{
											"key": "organization-code"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "users",
			"item": [
				{
					"name": "List all users of your organization.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							},
							{
								"key": "FZ-TransactionId",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/users",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"users"
							],
							"query": [
								{
									"key": "email",
									"value": "<string>",
									"description": "Filter users by email.",
									"disabled": true
								},
								{
									"key": "userName",
									"value": "<string>",
									"description": "Filter users by their user name.",
									"disabled": true
								},
								{
									"key": "firstName",
									"value": "<string>",
									"description": "Filter users by their first name.",
									"disabled": true
								},
								{
									"key": "lastName",
									"value": "<string>",
									"description": "Filter users by their last name.",
									"disabled": true
								},
								{
									"key": "primaryPhoneNumber",
									"value": "<string>",
									"description": "Filter users by their phone number (in e.164 format).",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of items per page.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for item pagination. See 'cursor' field from previous response.",
									"disabled": true
								}
							]
						},
						"description": "List all users of your organization. This endpoint is paginated and requires an integration token for authentication."
					},
					"response": [
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users?email=<string>&userName=<string>&firstName=<string>&lastName=<string>&primaryPhoneNumber=<string>&limit=100&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "email",
											"value": "<string>"
										},
										{
											"key": "userName",
											"value": "<string>"
										},
										{
											"key": "firstName",
											"value": "<string>"
										},
										{
											"key": "lastName",
											"value": "<string>"
										},
										{
											"key": "primaryPhoneNumber",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users?email=<string>&userName=<string>&firstName=<string>&lastName=<string>&primaryPhoneNumber=<string>&limit=100&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "email",
											"value": "<string>"
										},
										{
											"key": "userName",
											"value": "<string>"
										},
										{
											"key": "firstName",
											"value": "<string>"
										},
										{
											"key": "lastName",
											"value": "<string>"
										},
										{
											"key": "primaryPhoneNumber",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users?email=<string>&userName=<string>&firstName=<string>&lastName=<string>&primaryPhoneNumber=<string>&limit=100&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "email",
											"value": "<string>"
										},
										{
											"key": "userName",
											"value": "<string>"
										},
										{
											"key": "firstName",
											"value": "<string>"
										},
										{
											"key": "lastName",
											"value": "<string>"
										},
										{
											"key": "primaryPhoneNumber",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003 or 13008",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users?email=<string>&userName=<string>&firstName=<string>&lastName=<string>&primaryPhoneNumber=<string>&limit=100&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "email",
											"value": "<string>"
										},
										{
											"key": "userName",
											"value": "<string>"
										},
										{
											"key": "firstName",
											"value": "<string>"
										},
										{
											"key": "lastName",
											"value": "<string>"
										},
										{
											"key": "primaryPhoneNumber",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users?email=<string>&userName=<string>&firstName=<string>&lastName=<string>&primaryPhoneNumber=<string>&limit=100&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "email",
											"value": "<string>"
										},
										{
											"key": "userName",
											"value": "<string>"
										},
										{
											"key": "firstName",
											"value": "<string>"
										},
										{
											"key": "lastName",
											"value": "<string>"
										},
										{
											"key": "primaryPhoneNumber",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"response\": [\n  {\n   \"userName\": \"<string>\",\n   \"email\": \"<string>\",\n   \"firstName\": \"<string>\",\n   \"lastName\": \"<string>\",\n   \"userId\": \"<long>\",\n   \"createdOn\": \"<dateTime>\",\n   \"lastModifiedOn\": \"<dateTime>\",\n   \"primaryPhoneNumber\": \"<string>\",\n   \"active\": false,\n   \"locationId\": \"<long>\",\n   \"departmentId\": \"<long>\",\n   \"organizationId\": \"<long>\",\n   \"organizationCode\": \"<string>\"\n  },\n  {\n   \"userName\": \"<string>\",\n   \"email\": \"<string>\",\n   \"firstName\": \"<string>\",\n   \"lastName\": \"<string>\",\n   \"userId\": \"<long>\",\n   \"createdOn\": \"<dateTime>\",\n   \"lastModifiedOn\": \"<dateTime>\",\n   \"primaryPhoneNumber\": \"<string>\",\n   \"active\": false,\n   \"locationId\": \"<long>\",\n   \"departmentId\": \"<long>\",\n   \"organizationId\": \"<long>\",\n   \"organizationCode\": \"<string>\"\n  }\n ],\n \"pagination\": {\n  \"cursor\": \"<string>\",\n  \"limit\": \"<long>\"\n }\n}"
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users?email=<string>&userName=<string>&firstName=<string>&lastName=<string>&primaryPhoneNumber=<string>&limit=100&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "email",
											"value": "<string>"
										},
										{
											"key": "userName",
											"value": "<string>"
										},
										{
											"key": "firstName",
											"value": "<string>"
										},
										{
											"key": "lastName",
											"value": "<string>"
										},
										{
											"key": "primaryPhoneNumber",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get details of one user belonging to your organization.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							},
							{
								"key": "FZ-TransactionId",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/users/:user-id",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"users",
								":user-id"
							],
							"variable": [
								{
									"id": "30a7d94a-5f82-4520-9ed2-155ca947fea2",
									"key": "user-id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) User identifier."
								}
							]
						},
						"description": "Get details of one user belonging to your organization. This endpoint requires an integration token for authentication."
					},
					"response": [
						{
							"name": "Not found, status code 13004",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized, status code 13000 or 13001",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden, status code 13002",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request, status code 13003",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal error, status code 13005! Should be a temporary problem. If it persists please contact Fuze support.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ok, status code 0",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"userName\": \"<string>\",\n \"email\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"userId\": \"<long>\",\n \"createdOn\": \"<dateTime>\",\n \"lastModifiedOn\": \"<dateTime>\",\n \"primaryPhoneNumber\": \"<string>\",\n \"active\": false,\n \"locationId\": \"<long>\",\n \"departmentId\": \"<long>\",\n \"organizationId\": \"<long>\",\n \"organizationCode\": \"<string>\"\n}"
						},
						{
							"name": "Too many requests, status code 13006",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "test",
			"item": [
				{
					"name": "Get a test response",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fuzeBearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Fuze-Origin",
								"value": "Fuze Developer Center Postman Collection",
								"type": "text"
							},
							{
								"key": "FZ-TransactionId",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://developer.fuze.com/api/v1/test",
							"protocol": "https",
							"host": [
								"developer",
								"fuze",
								"com"
							],
							"path": [
								"api",
								"v1",
								"test"
							]
						},
						"description": "This endpoint should be used as an application level ping, only meaning that the API is alive. You may also use it to check if the authentication token is valid."
					},
					"response": [
						{
							"name": "Ok",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "4ad8258d-94ce-42d4-b5f1-82f9a2f8c9cb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "8b1d6dfa-73ef-4779-a758-f11e783a38a8",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "6a198ae8-0026-4f86-8bc4-6f7c9613dd93",
			"key": "baseUrl",
			"value": "https://developer.fuze.com/api/v1"
		},
		{
			"id": "9bc1a3ff-452d-417b-ad77-6f152eee488c",
			"key": "fuzeBearerToken",
			"value": ""
		}
	],
	"protocolProfileBehavior": {}
}
